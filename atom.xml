<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Home Assistant]]></title>
  <link href="https://home-assistant.io/atom.xml" rel="self"/>
  <link href="https://home-assistant.io/"/>
  <updated>2016-08-06T16:33:30+00:00</updated>
  <id>https://home-assistant.io/</id>
  <author>
    <name><![CDATA[Home Assistant]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Laundry Sensors with NodeMCU and Home Assistant]]></title>
    <link href="https://home-assistant.io/blog/2016/08/03/laundry-automation-update/"/>
    <updated>2016-08-03T17:22:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/08/03/laundry-automation-update</id>
    <content type="html"><![CDATA[<p><em>This is a guest post by Home Assistant user and contributor <a href="https://github.com/nkgilley">Nolan Gilley</a>.</em></p>

<p>Today I’ll show you how I used Home Assistant, a NodeMCU (ESP8266), and a couple of accelerometers to automate our laundry room.  This is a rewrite of an <a href="https://home-assistant.io/blog/2015/08/26/laundry-automation-with-moteino-mqtt-and-home-assistant/">old post</a> where I did the same thing using a Moteino &amp; Raspberry Pi.  This version only requires a NodeMCU.</p>

<p>We have an older washer and dryer which doesn’t have any form of notification when cycles complete.  Home Assistant was the obvious solution, I just needed to create sensors for the washer and dryer.  I tried using sound sensors but found them unreliable.  I ended up using an accelerometer attached to the back of each appliance.  I also added magnetic reed switches on the doors of the washer and dryer to detect whether they’re open or closed.  I connected the accelerometers and reed switches to an NodeMCU which will relay the data to my MQTT broker.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-laundry-automation/block-diagram.png" />
  Block diagram of schematic
</p>

<!--more-->

<p>After taking some sample data from the accelerometers while each appliance was in operation, I decided to plot the data to help determine the proper thresholds of when the devices were running or off.  I had to do this in order to get precise ranges so the dryer sensor wouldn’t get tripped by the washer or vice versa.  In the plot below you can see the acceleration in each direction for the accelerometer connected to the dryer.   It’s easy to see when the dryer is in operation here.  I used the same technique for the washer’s accelerometer.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-laundry-automation/data-graph.png" />
  Graph showing the accelerometer data
</p>

<p>Next it was just a matter of integrating everything with Home Assistant.  I was able to use the <a href="https://home-assistant.io/components/mqtt/">MQTT component</a> to read the washer and dryer states from the Moteino and display it in Home Assistant.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-laundry-automation/screenshot-ha.png" />
  Status of the dryer and washer in Home Assistant
</p>

<p>Next I wrote <a href="https://home-assistant.io/components/script/">scripts</a> that are run whenever the washer or dryer completes a load.  This is triggered by the <a href="https://home-assistant.io/getting-started/automation/">automation component</a>.  When the laundry is complete I have the lights in the house turn red and <a href="https://home-assistant.io/components/notify.joaoapps_join/">notify me via Join</a>.  Once the door is opened and laundry emptied another script runs that sets the lights back to normal.  So far it has been very helpful and very reliable.</p>

<p class="img">
  <a href="https://home-assistant.io/images/blog/2016-07-laundry-automation/protoboard.jpg">
    <img src="https://home-assistant.io/images/blog/2016-07-laundry-automation/protoboard.jpg" />
  </a>
  NodeMCU connected to MPU-6050 accelerometer.
</p>

<p>Materials used:</p>

<ul>
  <li><a href="https://www.amazon.com/gp/product/B010O1G1ES">NodeMCU</a></li>
  <li><a href="http://www.amazon.com/gp/product/B008BOPN40">2 x Accelerometers</a></li>
  <li><a href="http://www.amazon.com/gp/product/B004PARDRO">2 x Reed switch</a></li>
</ul>

<p><a href="https://github.com/nkgilley/nodemcu-laundry/blob/master/nodemcu-laundry.ino">Sketch for the NodeMCU is available here.</a></p>

<p>Home Assistant Configuration:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">mqtt</span>:
  <span class="key">broker</span>: <span class="string"><span class="content">192.168.1.100</span></span>
  <span class="key">port</span>: <span class="string"><span class="content">1883</span></span>
  <span class="key">keepalive</span>: <span class="string"><span class="content">60</span></span>
  <span class="key">qos</span>: <span class="string"><span class="content">0</span></span>

<span class="key">sensor</span>:
  - <span class="string"><span class="content">platform: mqtt</span></span>
    <span class="key">name</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Dryer Status</span><span class="delimiter">&quot;</span></span>
    <span class="key">state_topic</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">sensor/dryer</span><span class="delimiter">&quot;</span></span>
    <span class="key">unit_of_measurement</span>: <span class="string"><span class="delimiter">&quot;</span><span class="delimiter">&quot;</span></span>

  - <span class="string"><span class="content">platform: mqtt</span></span>
    <span class="key">name</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Washer Status</span><span class="delimiter">&quot;</span></span>
    <span class="key">state_topic</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">sensor/washer</span><span class="delimiter">&quot;</span></span>
    <span class="key">unit_of_measurement</span>: <span class="string"><span class="delimiter">&quot;</span><span class="delimiter">&quot;</span></span>

<span class="key">automation</span>:
  - <span class="string"><span class="content">alias: Washer complete</span></span>
    <span class="key">trigger</span>:
      <span class="key">platform</span>: <span class="string"><span class="content">state</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">sensor.washer_status</span></span>
      <span class="key">from</span>: <span class="string"><span class="content">'Running'</span></span>
      <span class="key">to</span>: <span class="string"><span class="content">'Complete'</span></span>
    <span class="key">action</span>:
      <span class="key">service</span>: <span class="string"><span class="content">script.turn_on</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">script.washer_complete</span></span>

  - <span class="string"><span class="content">alias: Washer emptied</span></span>
    <span class="key">trigger</span>:
      <span class="key">platform</span>: <span class="string"><span class="content">state</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">sensor.washer_status</span></span>
      <span class="key">from</span>: <span class="string"><span class="content">'Complete'</span></span>
      <span class="key">to</span>: <span class="string"><span class="content">'Empty'</span></span>
    <span class="key">action</span>:
      <span class="key">service</span>: <span class="string"><span class="content">scene.turn_on</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">scene.normal</span></span>

<span class="key">script</span>:
  <span class="key">washer_complete</span>:
    <span class="key">alias</span>: <span class="string"><span class="content">Washer Complete</span></span>
    <span class="key">sequence</span>:
      - <span class="string"><span class="content">alias: Join Notification</span></span>
        <span class="key">service</span>: <span class="string"><span class="content">notify.join</span></span>
        <span class="key">data</span>:
          <span class="key">message</span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">The washing machine has finished its cycle, please empty it!</span><span class="delimiter">&quot;</span></span>
      - <span class="string"><span class="content">alias: Living Room Lights Blue</span></span>
        <span class="key">service</span>: <span class="string"><span class="content">scene.turn_on</span></span>
        <span class="key">data</span>:
          <span class="key">entity_id</span>: <span class="string"><span class="content">scene.blue</span></span>
</pre></div>
</div>
</div>

<p>Resources used:</p>

<ul>
  <li><a href="http://www.instructables.com/id/Uber-Home-Automation-w-Arduino-Pi/step13/Washer-Dryer-Smartifier-Water-Leak-Sensor/">Inspiration and Help with Arduino code</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.25: Custom frontend panels, Jupyter notebooks, DirecTV.]]></title>
    <link href="https://home-assistant.io/blog/2016/07/30/custom-frontend-panels-jupyter-notebooks-directv/"/>
    <updated>2016-07-30T12:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/30/custom-frontend-panels--jupyter-notebooks--directv</id>
    <content type="html"><![CDATA[<p>When Home Assistant started the focus has always been on making a great developer experience. Allowing anyone to add support for their favorite devices to Home Assistant easily. This focus has been a great success since we now have 339 components and platforms!</p>

<p>Starting with this release, we are extending our extensability to the frontend. Starting this release, any component can <a href="https://home-assistant.io/developers/frontend_creating_custom_panels/">add it’s own page to the frontend</a>. Examples of this today are the map, logbook and history. We are looking forward to all the crazy panels you’ll come up with!</p>

<p>We have also seen an exciting trend of people starting to visualize their Internet of Things data using <a href="http://jupyter.org/">Jupyter</a> Notebooks, which are a great way to create and share documents that contain code, visualizations, and explanatory text. In case you missed it, the <a href="https://home-assistant.io/blog/2016/07/23/internet-of-things-data-exploration-with-jupyter-notebooks/">blog</a> post by <a href="https://github.com/kireyeu">@kireyeu</a> shows an advanced usecase while our <a href="https://home-assistant.io/cookbook/#jupyter-notebooks/">Notebooks</a> in the <a href="https://github.com/home-assistant/home-assistant-notebooks">Home Assistant Notebooks repository</a> cover the basics.</p>

<p>This release also includes a bunch of new integrations, among others three new media player platforms. This means that today Home Assistant can talk to 26 different media players!</p>

<p>The brand-new <a href="https://home-assistant.io/components/panel_iframe/">iFrame panel component</a> allows you to add other websites as pages in the Home Assistant frontend. They will show up in the sidebar and can be used the same way as you open the frontend in your browser but all within one view.</p>

<p>I would like to do a shoutout to <a href="https://github.com/fabianhjr">@fabianhjr</a>. He has started adding <a href="https://docs.python.org/3/library/typing.html">typing</a> data (<a href="https://www.python.org/dev/peps/pep-0484/">PEP484</a>) to the Home Assistant core. This will help us identify issues before they are released.</p>

<p><img src="https://home-assistant.io/images/supported_brands/russound.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/jupyter.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/directv.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /></p>

<ul>
  <li>Frontend: Support for <a href="https://home-assistant.io/components/panel_iframe/">iFrame panels</a> to adding other sites to sidebar (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Allow components to register <a href="https://home-assistant.io/developers/frontend_creating_custom_panels/">custom frontend panels</a> (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Add example custom_component <a href="https://home-assistant.io/cookbook/custom_panel_using_react/">react_panel</a> showing custom panels (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/light.flux_led/">MagicLight/Flux WiFi Color LED Light</a> support (<a href="https://github.com/Danielhiversen">@Danielhiversen</a>)</li>
  <li>Script: Specify a delay <a href="https://home-assistant.io/getting-started/scripts/#delay/">using templates</a> (<a href="https://github.com/Teagan42">@Teagan42</a>)</li>
  <li>Media player: <a href="https://home-assistant.io/components/media_player.russound_rnet/">Russound RNET</a> integration (<a href="https://github.com/laf">@laf</a>)</li>
  <li>Remote: Option specifying custom timeout when calling Home Assistant API (<a href="https://github.com/n8henrie">@n8henrie</a>)</li>
  <li>Thermostat: Integration of <a href="https://home-assistant.io/components/thermostat.knx/">KNX</a> thermostats (<a href="https://github.com/open-homeautomation">@open-homeautomation</a>)</li>
  <li>Thermostat: Support for HVAC mode of <a href="https://home-assistant.io/components/thermostat.nest/">Nest</a> devices (<a href="https://github.com/vladonemo">@vladonemo</a>)</li>
  <li>InfluxDB: Option to specify additional <a href="https://home-assistant.io/components/influxdb/">tags</a> (<a href="https://github.com/open-homeautomation">@open-homeautomation</a>)</li>
  <li>Input slider: Support for float value (<a href="https://github.com/ngraziano">@ngraziano</a>)</li>
  <li>Template: New <a href="https://home-assistant.io/topics/templating/#home-assistant-template-extensions/">filters</a> (<code>timestamp_local</code> and <code>timestamp_utc</code>) (<a href="https://github.com/fabaff">@fabaff</a>)</li>
  <li>Binary sensor - Wink: Water leak sensor support added (<a href="https://github.com/w1ll1am23">@w1ll1am23</a>)</li>
  <li>Sensor - Tellduslive: Support for luminance of Fibaro Motion Sensor (<a href="https://github.com/PetitCircuitLab">@PetitCircuitLab</a>)</li>
  <li>Switch - RPi GPIO: Fix when inverted logic (<a href="https://github.com/zeroDenial">@zeroDenial</a>)</li>
  <li>Z-Wave: Rollershutter update (<a href="https://github.com/turbokongen">@turbokongen</a>)</li>
  <li>RFXtrx: Fire events when receiving signals from sensors and tests added (<a href="https://github.com/Danielhiversen">@Danielhiversen</a>)</li>
  <li>Core: Add <a href="https://docs.python.org/3/library/typing.html">type</a> checking using mypy to the core (<a href="https://github.com/fabianhjr">@fabianhjr</a>)</li>
  <li>Remote: Support for getting the <a href="https://home-assistant.io/developers/python_api/#get-configuration/">Configuration</a> through the Python API (<a href="https://github.com/fabaff">@fabaff</a>)</li>
  <li>Media player: Support for <a href="https://home-assistant.io/components/media_player.directv/">DirecTV</a> (<a href="https://github.com/cbulock">@cbulock</a>)</li>
  <li>Use browser timezone for frontend logbook and history dates (<a href="https://github.com/armills">@armills</a>)</li>
  <li>Light: New support for <a href="https://home-assistant.io/components/light.x10/">X10</a> lights (<a href="https://github.com/fotoetienne">@fotoetienne</a>)</li>
  <li>Sensor: Support for observing <a href="https://home-assistant.io/components/sensor.imap/">IMAP</a> accounts (<a href="https://github.com/danieljkemp">@danieljkemp</a>)</li>
  <li>Media Player: Integration for <a href="https://home-assistant.io/components/media_player.mpchc/">MPC-HC</a> (Media Player Classic - Home Cinema) mediaplayer (<a href="https://github.com/abcminiuser">@abcminiuser</a>)</li>
  <li>Notify: <code>location</code> extension for <a href="https://home-assistant.io/components/notify.telegram/">Telegram</a> and photo bug fixed (<a href="https://github.com/keatontaylor">@keatontaylor</a> and <a href="https://github.com/pvizeli">@pvizeli</a>)</li>
  <li>Groups: Lock states will now be properly grouped (<a href="https://github.com/jwl17330536">@jwl17330536</a>)</li>
  <li>Media Player: Added tests for Sonos to improve code quality (<a href="https://github.com/americanwookie">@americanwookie</a>)</li>
  <li>Device Tracker: iCloud stability fixes (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Sensor: Speedtest with improved error handling and state restoring (<a href="https://github.com/nkgilley">@nkgilley</a>)</li>
  <li>Recorder: Stability fixes (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Qwikswitch: Stability fixes (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/light.hyperion/">Hyperion</a> keeps now track of active color (<a href="https://github.com/schneefux">@schneefux</a>)</li>
</ul>

<h3><a class="title-link" name="hotfix-0251---august-1" href="#hotfix-0251---august-1"></a> Hotfix 0.25.1 - August 1</h3>

<ul>
  <li>Light - Z-Wave: Bring back delayed value update behavior (<a href="https://github.com/jnewland">@jnewland</a>)</li>
  <li>Recorder: Properly close session after execute (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Media Player - Kodi: No longer block startup if connecting to wrong port (<a href="https://github.com/shoekstra">@shoekstra</a>)</li>
  <li>Downgrade voluptuous to 0.8.9 as it blocked the upgrade for some (<a href="https://github.com/balloob">@balloob</a>)</li>
</ul>

<h3><a class="title-link" name="hotfix-0252---august-2" href="#hotfix-0252---august-2"></a> Hotfix 0.25.2 - August 2</h3>

<ul>
  <li>Hotfix to make sure Z-Wave locks work again. Thanks to @tobiebooth for the quick fix.</li>
</ul>

<h3><a class="title-link" name="breaking-changes" href="#breaking-changes"></a> Breaking changes</h3>

<ul>
  <li>Google Voice SMS notification support was removed.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ESP8266 and MicroPython - Part 1]]></title>
    <link href="https://home-assistant.io/blog/2016/07/28/esp8266-and-micropython-part1/"/>
    <updated>2016-07-28T04:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/28/esp8266-and-micropython-part1</id>
    <content type="html"><![CDATA[<p><img src="https://home-assistant.io/images/blog/2016-07-micropython/micropython.png" style="clear: right; border:none; box-shadow: none; float: right; margin-bottom: 12px;" width="200" /><br />
The first release of Micropython for ESP8266 was delivered a couple of weeks ago. The <a href="http://docs.micropython.org/en/latest/esp8266/esp8266_contents.html">documentation</a> covers a lot of ground. This post is providing only a little summary which should get you started.</p>

<p>Until a couple of weeks ago, the pre-built MicroPython binary for the ESP8266 was only available to backers. This has changed now and it is available to the public for <a href="https://micropython.org/download/#esp8266">download</a>.</p>

<!--more-->

<p>The easiest way is to use <a href="https://github.com/themadinventor/esptool">esptool.py</a> for firmware handling tasks. First erase the flash:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo python esptool.py --port /dev/ttyUSB0 erase_flash
esptool.py v1.0.2-dev
Connecting...
Erasing flash (this may take a while)...
</pre></div>
</div>
</div>

<p>and then load the firmware. You may adjust the file name of the firmware binary.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo python esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=8m 0 esp8266-2016-07-10-v1.8.2.bin
esptool.py v1.2-dev
Connecting...
Running Cesanta flasher stub...
Flash params set to 0x0020
Writing 540672 @ 0x0... 540672 (100 %)
Wrote 540672 bytes at 0x0 in 13.1 seconds (330.8 kbit/s)...
Leaving...
</pre></div>
</div>
</div>

<p>Now reset the device. You should then be able to use the <a href="http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/repl.html#getting-a-micropython-repl-prompt">REPL (Read Evaluate Print Loop)</a>. On Linux there is <code>minicom</code> or <code>picocom</code>, on a Mac you can use <code>screen</code> (eg. <code>screen /dev/tty.SLAB_USBtoUART 115200</code>), and on Windows there is Putty to open a serial connection and get the REPL prompt.</p>

<p>The <a href="http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/repl.html#webrepl-a-prompt-over-wifi">WebREPL</a> work over a wireless connection and allows easy access to a prompt in your browser. An instance of the WebREPL client is hosted at <a href="http://micropython.org/webrepl">http://micropython.org/webrepl</a>. Alternatively, you can create a local clone of their <a href="https://github.com/micropython/webrepl">GitHub repository</a>. This is neccessary if your want to use the command-line tool <code>webrepl_cli.py</code> which is mentionend later in this post.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo minicom -D /dev/ttyUSB0
#4 ets_task(4020e374, 29, 3fff70e8, 10)                                                          
WebREPL daemon started on ws://192.168.4.1:8266
Started webrepl in setup mode
could not open file 'main.py' for reading

#5 ets_task(4010035c, 3, 3fff6360, 4)
MicroPython v1.8.2-9-g805c2b9 on 2016-07-10; ESP module with ESP8266
Type &quot;help()&quot; for more information.
&gt;&gt;&gt; 
</pre></div>
</div>
</div>

<p class="note">
The public build of the firmware may be different than the firmware distributed to the backers of the campaign. Especially in regard of the <a href="http://docs.micropython.org/en/latest/esp8266/py-modindex.html">available modules</a>, turned on debug messages, and alike. Also, the WebREPL may not be started by default.
</p>

<p>Connect a LED to pin 5 (or another pin of your choosing) to check if the ESP8266 is working as expected.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>&gt;&gt;&gt; <span class="keyword">import</span> <span class="include">machine</span>
&gt;&gt;&gt; pin = machine.Pin(<span class="integer">5</span>, machine.Pin.OUT)
&gt;&gt;&gt; pin.high()
</pre></div>
</div>
</div>

<p>You can toogle the LED by changing its state with <code>pin.high()</code> and <code>pin.low()</code>.</p>

<p>Various ESP8266 development board are shipped with an onboard photocell or a light dependent resistors (LDR) connected to the analog pin of your ESP8266 check if you are able to obtain a value.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>&gt;&gt;&gt; <span class="keyword">import</span> <span class="include">machine</span>
&gt;&gt;&gt; brightness = machine.ADC(<span class="integer">0</span>)
&gt;&gt;&gt; brightness.read()
</pre></div>
</div>
</div>

<p>Make sure that you are familiar with REPL and WebREPL because this will be needed soon. Keep in mind the password for the WebREPL access.</p>

<p>Read the <a href="http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/network_basics.html">instructions</a> about how to setup your wireless connection. Basically you need to upload a <code>boot.py</code> file to the microcontroller and this file is taking care of the connection setup. Below you find a sample which is more or less the same as shown in the <a href="http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/network_basics.html#configuration-of-the-wifi">documentation</a>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="keyword">def</span> <span class="function">do_connect</span>():
    <span class="keyword">import</span> <span class="include">network</span>

    SSID = <span class="string"><span class="delimiter">'</span><span class="content">SSID</span><span class="delimiter">'</span></span>
    PASSWORD = <span class="string"><span class="delimiter">'</span><span class="content">PASSWORD</span><span class="delimiter">'</span></span>

    sta_if = network.WLAN(network.STA_IF)
    ap_if = network.WLAN(network.AP_IF)
    <span class="keyword">if</span> ap_if.active():
        ap_if.active(<span class="predefined-constant">False</span>)
    <span class="keyword">if</span> <span class="keyword">not</span> sta_if.isconnected():
        print(<span class="string"><span class="delimiter">'</span><span class="content">connecting to network...</span><span class="delimiter">'</span></span>)
        sta_if.active(<span class="predefined-constant">True</span>)
        sta_if.connect(SSID, PASSWORD)
        <span class="keyword">while</span> <span class="keyword">not</span> sta_if.isconnected():
            <span class="keyword">pass</span>
    print(<span class="string"><span class="delimiter">'</span><span class="content">Network configuration:</span><span class="delimiter">'</span></span>, sta_if.ifconfig())
</pre></div>
</div>
</div>

<p>Upload this file with <code>webrepl_cli.py</code> or the WebREPL:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ python webrepl_cli.py boot.py 192.168.4.1:/boot.py
</pre></div>
</div>
</div>

<p>If you reboot, you should see your current IP address in the terminal.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>&gt;&gt;&gt; Network configuration: ('192.168.0.10', '255.255.255.0', '192.168.0.1', '192.168.0.1')
</pre></div>
</div>
</div>

<p>First let’s create a little consumer for Home Assistant sensor’s state. The code to place in <code>main.py</code> is a mixture of code from above and the <a href="https://home-assistant.io/developers/rest_api/">RESTful API</a> of Home Assistant. If the temperature in the kitchen is higher than 20 °C then the LED connected to pin 5 is switched on.</p>

<p class="note">
If a module is missing then you need to download is it from <a href="https://github.com/micropython/micropython-lib">MicroPython Library overview</a> and upload it to the ESP8266 with <code>webrepl_cli.py</code> manually.
</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="comment"># Sample code to request the state of a Home Assistant entity.</span>

API_PASSWORD = <span class="string"><span class="delimiter">'</span><span class="content">YOUR_PASSWORD</span><span class="delimiter">'</span></span>
URL = <span class="string"><span class="delimiter">'</span><span class="content">http://192.168.0.5:8123/api/states/</span><span class="delimiter">'</span></span>
ENTITY = <span class="string"><span class="delimiter">'</span><span class="content">sensor.kitchen_temperature</span><span class="delimiter">'</span></span>
TIMEOUT = <span class="integer">30</span>
PIN = <span class="integer">5</span>

<span class="keyword">def</span> <span class="function">get_data</span>():
    <span class="keyword">import</span> <span class="include">urequests</span>
    url = <span class="string"><span class="delimiter">'</span><span class="content">{}{}</span><span class="delimiter">'</span></span>.format(URL, ENTITY)
    headers = {<span class="string"><span class="delimiter">'</span><span class="content">x-ha-access</span><span class="delimiter">'</span></span>: API_PASSWORD,
               <span class="string"><span class="delimiter">'</span><span class="content">content-type</span><span class="delimiter">'</span></span>: <span class="string"><span class="delimiter">'</span><span class="content">application/json</span><span class="delimiter">'</span></span>}
    resp = urequests.get(URL, headers=headers)
    <span class="keyword">return</span> resp.json()[<span class="string"><span class="delimiter">'</span><span class="content">state</span><span class="delimiter">'</span></span>]

<span class="keyword">def</span> <span class="function">main</span>():
    <span class="keyword">import</span> <span class="include">machine</span>
    <span class="keyword">import</span> <span class="include">time</span>

    pin = machine.Pin(PIN, machine.Pin.OUT)
    <span class="keyword">while</span> <span class="predefined-constant">True</span>:
        <span class="keyword">try</span>:
            <span class="keyword">if</span> <span class="predefined">int</span>(get_data()) &gt;= <span class="integer">20</span>:
                pin.high()
            <span class="keyword">else</span>:
                pin.low()
        <span class="keyword">except</span> <span class="exception">TypeError</span>:
            <span class="keyword">pass</span>
        time.sleep(TIMEOUT)

<span class="keyword">if</span> __name__ == <span class="string"><span class="delimiter">'</span><span class="content">__main__</span><span class="delimiter">'</span></span>:
    print(<span class="string"><span class="delimiter">'</span><span class="content">Get the state of {}</span><span class="delimiter">'</span></span>.format(ENTITY))
    main()
</pre></div>
</div>
</div>

<p>Upload <code>main.py</code> the same way as <code>boot.py</code>. After a reboot (<code>&gt;&gt;&gt; import machine</code> and <code>&gt;&gt;&gt; machine.reboot()</code>) or power-cycling your physical notifier is ready.</p>

<p>If you run into trouble, press “Ctrl+c” in the REPL to stop the execution of the code, enter <code>&gt;&gt;&gt; import webrepl</code> and <code>&gt;&gt;&gt; webrepl.start()</code>, and upload your fixed file.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IoT Data Exploration with Jupyter Notebooks]]></title>
    <link href="https://home-assistant.io/blog/2016/07/23/internet-of-things-data-exploration-with-jupyter-notebooks/"/>
    <updated>2016-07-23T18:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/23/internet-of-things-data-exploration-with-jupyter-notebooks</id>
    <content type="html"><![CDATA[<p><em>This is the first blog post by Anton Kireyeu. A new contributor to Home Assistant who will focus on exploring and visualizing Home Assistant data.</em></p>

<p>As we learned in the recent <a href="https://home-assistant.io/blog/2016/07/19/visualizing-your-iot-data/">blog post by Fabian</a>, all operational data of your Home Assistant application is stored locally and is available for exploration. Our first steps were querying data with the <a href="http://sqlitebrowser.org/">DB Browser for SQLite</a>, exporting the data extract as a CSV file and graphing in LibreOffice. But what else can be done with this data and what tools are there available?</p>

<p>This post will help you get set up using a few popular data scientist tools to allow you to locally process your data:</p>

<ul>
  <li> <a href="http://pandas.pydata.org/">Pandas</a>: an open source tool for data analysis for Python</li>
  <li> <a href="http://matplotlib.org/">matplotlib</a>: a Python plotting library</li>
  <li> <a href="https://jupyter.org/">Jupyter notebook</a>: application for creation and sharing of documents containing live code, visualizations and explanatory text</li>
</ul>

<p class="img">
<img src="https://home-assistant.io/images/blog/2016-07-data-exploration/graph.png" />
One of the graphs created with this tutorial.
</p>

<p><em>TL; DR: Use <a href="http://nbviewer.jupyter.org/github/home-assistant/home-assistant-notebooks/blob/master/DataExploration-1/DataExploration-1.ipynb">this Jupyter Notebook</a> to visualize of your data</em></p>

<!--more-->

<h3><a class="title-link" name="dependencies" href="#dependencies"></a> Dependencies</h3>

<p>In order to run the provided Jupyter notebook, please make sure you have the following applications/libraries installed on your computer:</p>

<ul>
  <li>Pandas</li>
  <li>NumPy</li>
  <li>Matplotlib</li>
  <li>SQLAlchemy</li>
  <li>Jupyter</li>
</ul>

<p>As a Windows user myself, I find the easiest, quickest and most hassle-free way of installing all of these dependencies is to use <a href="https://winpython.github.io/">WinPython</a>. This free open-source portable distribution includes all of the dependencies required for this notebook, as well as a few other essential Python libraries you may require for data exploration in the future.</p>

<h4><a class="title-link" name="why-jupyter" href="#why-jupyter"></a> Why Jupyter?</h4>

<p>While all Home Assistant implementations can have varying setup, components and scripts, the underlying data structure is standardized and well-defined. This allows us to write Python code that is environmentally agnostic. Wrapping it in a Jupyter notebook ensures the code, visualizations and directions/explanations are kept digestible and neatly-packaged. One of the amazing features of Jupyter is the ability to change code as you go along, customizing all outputs and visualizations on the fly!</p>

<h4><a class="title-link" name="where-do-i-start" href="#where-do-i-start"></a> Where do I start?</h4>

<p>This tutorial is based around a heavily commented Jupyter Notebook that we created. So to get started, you will have to open that:</p>

<ul>
  <li><a href="http://nbviewer.jupyter.org/github/home-assistant/home-assistant-notebooks/blob/master/DataExploration-1/DataExploration-1.ipynb">download the tutorial Jupyter Notebook</a> (leads to preview page, from there click download top-right)</li>
  <li>launch the Jupyter Notebook App</li>
  <li>Click the ‘upload’ button to add the downloaded notebook to Jupyter</li>
  <li>Adjust the <code>DB_URL</code> at the beginning of the notebook to point at your Home Assistant database</li>
  <li>Select in top menu: Cell -&gt; Run All</li>
</ul>

<p>That’s it! The included code will walk you through importing the required libraries, show running raw SQL against your local database, plotting basic data from the states table, and in the end output a few plots of changes for every entity in your system as well as the mean daily value for the past 20 days.</p>

<p>After just those few steps, you will be greeted with beautiful formatted data like this:</p>

<p class="img">
<img src="https://home-assistant.io/images/blog/2016-07-data-exploration/graph.png" />
One of the graphs created with this tutorial.
</p>

<h4><a class="title-link" name="whats-next" href="#whats-next"></a> What’s next?</h4>

<p>Thanks to the magic of Jupyter, all of the code is customizable: want to selectively display your data, only covering a specific entity? Sure thing! Want to change the properties of the plots? No problem!</p>

<p>While you learn and explore your IoT data, we will be working on providing more ready-to-use Jupyter Notebooks. Feel free to ask questions or provide suggestions. Would you like to see a specific visualization? Is there a particular facet of data you’re interested in? Let’s talk about it, let’s dive into the world of data together!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visualize your IoT data]]></title>
    <link href="https://home-assistant.io/blog/2016/07/19/visualizing-your-iot-data/"/>
    <updated>2016-07-19T16:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/19/visualizing-your-iot-data</id>
    <content type="html"><![CDATA[<p><img src="https://home-assistant.io/images/blog/2016-07-reporting/mpl-sensor.png" style="clear: right; border:none; box-shadow: none; float: right; margin-bottom: 12px;" width="200" /></p>

<p>The <a href="https://home-assistant.io/components/history/">history component</a> is tracking everything that is going on within Home Assistant. This means that you have access to all stored information about your home. Our history is not a full-fledged graphical processing and visualization component as you may know from systems and network monitoring tools. The current limitation is that you only can select a day for a visual output of your information and not a period. Also, there is no possibility to drill down on a specific entity.</p>

<p>This blog post will show you ways to export data for reporting, visualization, or further analysis of automation rules.</p>

<!--more-->

<p>In this blog post I use the temperature of the <a href="https://en.wikipedia.org/wiki/Aare">Aare</a> river close to where I live as a show case. The temperatures were recorded with the <a href="https://home-assistant.io/components/sensor.swiss_hydrological_data/">Swiss Hydrological Data sensor</a> and the name of the sensor is <code>sensor.aare</code>.</p>

<p>The database is stored at <code>&lt;path to config dir&gt;/.homeassistant/home-assistant_v2.db</code> as <a href="https://www.sqlite.org/">SQLite database</a>. In all examples we are going to use the path: <code>/home/ha/.homeassistant/home-assistant_v2.db</code></p>

<p>If you are just curious what’s stored in your database then you can use the <code>sqlite3</code> command-line tool or a graphical one like <a href="http://sqlitebrowser.org/">DB Browser for SQLite</a>.</p>

<p>The table that is holding the states is called <code>states</code>. The <code>events</code> tables is responsible for storing the events which occurred. So, we will first check how many entries there are in the <code>states</code> table. <code>sqlite3</code> needs to know where the databases is located. To work with your database make sure that Home Assistant is not running or create a copy of the existing database. It’s recommended to work with a copy.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sqlite3 /home/ha/.homeassistant/home-assistant_v2.db 
SQLite version 3.11.0 2016-02-15 17:29:24
sqlite&gt; SELECT count(*) FROM states;
24659
</pre></div>
</div>
</div>

<p>Let’s have a look at a sample <a href="https://en.wikipedia.org/wiki/SQL">SQL</a> query. This query will show all states in a period for the sensor <code>sensor.aare</code>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="class">SELECT</span> state, last_changed <span class="keyword">FROM</span> states
  <span class="keyword">WHERE</span>
    entity_id = <span class="string"><span class="delimiter">'</span><span class="content">sensor.aare</span><span class="delimiter">'</span></span>
  <span class="keyword">AND</span>
     last_changed <span class="keyword">BETWEEN</span>
    <span class="string"><span class="delimiter">'</span><span class="content">2016-07-05 00:00:00.000000</span><span class="delimiter">'</span></span> <span class="keyword">AND</span> <span class="string"><span class="delimiter">'</span><span class="content">2016-07-07 00:00:00.000000</span><span class="delimiter">'</span></span>;
</pre></div>
</div>
</div>

<p>The SQL statement can be formed that it fits exactly what you need. This means that you can process the data in any way you want for further use. Often it makes sense to eliminate certain entries like <code>Unknown</code> or peaks.</p>

<p>If the above query is executed in DB Browser for SQLite you would be able to save the sensor’s graph as png.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-reporting/db-browser.png" />
  Visualization with DB Browser for SQLite
</p>

<p>You may ask: Why not do this with LibreOffice Calc or another spreadsheet application? As most spreadsheet applications are not able to work directly with SQLite database we are going to export the data from the database to <a href="https://en.wikipedia.org/wiki/Comma-separated_values">CSV</a>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sqlite3 -header -csv /home/ha/.homeassistant/home-assistant_v2.db &quot;SELECT last_changed, state FROM states WHERE entity_id = 'sensor.aare' AND last_changed BETWEEN '2016-07-05 00:00:00.000000' AND '2016-07-07 00:00:00.000000';&quot; &gt; sensor.csv
</pre></div>
</div>
</div>

<p>The ordering for the <code>SELECT</code> was changed to get the time stamps first and then the state. Now we can import the CSV file into the application of your choice, here it’s LibreOffice Calc.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-reporting/libreoffice-import.png" />
  Import of the CSV file 
</p>

<p>After the import a graph can be created over the existing data.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-reporting/libreoffice-graph.png" />
  Graph in LibreOffice
</p>

<p>You can also use <a href="http://matplotlib.org/">matplotlib</a> to generate graphs as an alternative to a spreadsheet application. This is a powerful Python 2D plotting library. With the built-in support for SQLite in Python it will only take a couple lines of code to visualize your data.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="keyword">import</span> <span class="include">sqlite3</span>
<span class="keyword">from</span> <span class="include">matplotlib</span> <span class="keyword">import</span> <span class="include">dates</span>
<span class="keyword">import</span> <span class="include">matplotlib.pyplot</span> <span class="keyword">as</span> plt

<span class="keyword">import</span> <span class="include">homeassistant.util.dt</span> <span class="keyword">as</span> dt

values = []
timestamps = []

conn = sqlite3.connect(<span class="string"><span class="delimiter">'</span><span class="content">/home/ha/.homeassistant/home-assistant_v2.db</span><span class="delimiter">'</span></span>)
data = conn.execute(<span class="string"><span class="delimiter">&quot;</span><span class="content">SELECT state, last_changed FROM states WHERE </span><span class="delimiter">&quot;</span></span>
                    <span class="string"><span class="delimiter">&quot;</span><span class="content">entity_id = 'sensor.aare' AND last_changed BETWEEN </span><span class="delimiter">&quot;</span></span>
                    <span class="string"><span class="delimiter">&quot;</span><span class="content">'2016-07-05 00:00:00.000000' AND </span><span class="delimiter">&quot;</span></span>
                    <span class="string"><span class="delimiter">&quot;</span><span class="content">'2016-07-07 00:00:00.000000'</span><span class="delimiter">&quot;</span></span>)

<span class="keyword">for</span> x <span class="keyword">in</span> data:
    timestamps.append(dates.date2num(dt.parse_datetime(x[<span class="integer">1</span>])))
    values.append(<span class="predefined">float</span>(x[<span class="integer">0</span>]))

plt.plot_date(x=timestamps, y=values, fmt=<span class="string"><span class="delimiter">&quot;</span><span class="content">r-</span><span class="delimiter">&quot;</span></span>)
plt.ylabel(<span class="string"><span class="delimiter">'</span><span class="content">Temperature</span><span class="delimiter">'</span></span>)
plt.xlabel(<span class="string"><span class="delimiter">'</span><span class="content">Time line</span><span class="delimiter">'</span></span>)

plt.savefig(<span class="string"><span class="delimiter">'</span><span class="content">sensor.png</span><span class="delimiter">'</span></span>)
</pre></div>
</div>
</div>

<p>Creating a connection to the database and executing a query is similar to the ways already seen. The return values from the query are splitted into two lists. The time stamps must be converted in an value which is accepted by matplotlib and then the graph is generated and saved as image.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-reporting/mpl-sensor.png" />
  Sensor graph generated by matplotlib
</p>

<p>Most of the graphs are pretty ugly. So, further beautification will be needed. If you have created a nice report including some amazing graphs then the Home Assistant community would be grateful for sharing them in our <a href="https://community.home-assistant.io/">forum</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.24: SQLAlchemy, KNX, Join by Joaoapps, and SimpliSafe.]]></title>
    <link href="https://home-assistant.io/blog/2016/07/16/sqlalchemy-knx-join-simplisafe/"/>
    <updated>2016-07-16T12:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/16/sqlalchemy-knx-join-simplisafe</id>
    <content type="html"><![CDATA[<p>It’s time for Home Assistant 0.24 and it’s full of new integration for your Home. It contains some structural changes to our history which requires action from your end, so please keep reading.</p>

<p><a href="https://www.mapquest.com/">MapQuest</a> discontinued their free and direct tile access by Monday, July 11, 2016. With <a href="https://carto.com/">CARTO</a> we found a very cool and suitable solution. They allow us to use their tile for the map. Thank you, <a href="https://carto.com/">CARTO</a>.</p>

<p><a href="https://github.com/rhooper/">Roy Hooper</a> did an amazing job migrating the history support from being tied to SQLite to use the ORM SQLAlchemy instead. This means that you can now use <strong>any</strong> SQL backend for the history. So besides SQLite you can now databases like MySQL or PostgreSQL. However, this does require that you install <a href="http://www.sqlalchemy.org/">SQLAlchemy</a> and run a command to migrate your existing history over. We tried to make the process as seamless as possible by introducing a new command line script:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ pip3 install SQLAlchemy
$ hass --script db_migrator --config /path/to/config
</pre></div>
</div>
</div>

<p>You can omit the <code>--config</code> option if you use the default configuration directory. Run the script with <code>--help</code> to get more options.</p>

<p><img src="https://home-assistant.io/images/supported_brands/yahooweather.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/joaoapps_join.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/knx.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/tp-link.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /></p>

<ul>
  <li>Config: Improved support for storing <a href="https://home-assistant.io/topics/secrets/">secrets</a> (<a href="https://github.com/kellerza/">@kellerza</a>)</li>
  <li>Sensor: Support for <a href="https://home-assistant.io/components/sensor.yweather/">Yahoo! Weather</a> (<a href="https://github.com/pvizeli/">@pvizeli</a>)</li>
  <li>Add scripts to command line to expose advanced options (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Alarm: <a href="https://home-assistant.io/components/alarm_control_panel.simplisafe/">SimpliSafe</a> is now supported (<a href="https://github.com/w1ll1am23/">@w1ll1am23</a>)</li>
  <li>Core: Switch to SQLAlchemy for the Recorder component (<a href="https://github.com/rhooper/">@rhooper</a>)</li>
  <li>Support for <a href="https://home-assistant.io/components/joaoapps_join/">Join by Joaoapps</a> added incl. <a href="https://home-assistant.io/components/notify.joaoapps_join/">Join Notify</a> (<a href="https://github.com/nkgilley">@nkgilley</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.plex/">Plex</a> will no longer spam the logs if server goes offline (<a href="https://github.com/dale3h/">@dale3h</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.apcupsd/">APCUPSd Sensor</a> now supports names, icons and units (<a href="https://github.com/dale3h/">@dale3h</a>)</li>
  <li>Lock: <a href="https://home-assistant.io/components/lock.verisure/">Verisure</a> entities will now use name instead of serial number for entity id (<a href="https://github.com/turbokongen/">@turbokongen</a>)</li>
  <li><a href="https://home-assistant.io/components/statsd/">StatsD</a> can now also export attributes (<a href="https://github.com/bah2830/">@bah2830</a>)</li>
  <li>Support for <a href="https://home-assistant.io/components/knx/">KNX</a> added (<a href="https://github.com/usul27">@usul27</a>)</li>
  <li>Switch: <a href="https://home-assistant.io/components/switch.tplink/">TPLink</a> HS100/HS110 now supported (<a href="https://github.com/GadgetReactor">@GadgetReactor</a>)</li>
  <li>Stability fixes for <a href="//components/rfxtrx/">RFXtrx</a> ([@Danielhiversen])</li>
  <li>Tweaks to <a href="https://home-assistant.io/components/zwave/">Z-Wave</a> (<a href="https://github.com/turbokongen/">@turbokongen</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/light/">Brightness</a> now clamped to 0-255 (<a href="https://github.com/keatontaylor">@keatontaylor</a>)</li>
  <li>Thermostat: <a href="https://home-assistant.io/components/thermostat.radiotherm/">Radiotherm</a> HVAC mode now supported (<a href="https://github.com/danieljkemp">@danieljkemp</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.google_travel_time/">Google Travel</a> times can now use dynamic locations for start/end (<a href="https://github.com/bah2830/">@bah2830</a>)</li>
  <li>Notify: Allow sending photos to <a href="https://home-assistant.io/components/notify.telegram/">Telegram</a> (<a href="https://github.com/pvizeli/">@pvizeli</a>)</li>
  <li>Frontend: Improve loading times (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Frontend: Fix stream not reconnecting after standby (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Frontend: Wait up to two seconds for new state before resetting toggle after toggling state (<a href="https://github.com/balloob/">@balloob</a>)</li>
</ul>

<h3><a class="title-link" name="hotfix-0241---july-21" href="#hotfix-0241---july-21"></a> Hotfix 0.24.1 - July 21</h3>

<p>Quick hot fix after we found a bug in the migrator where it wouldn’t work with a database in a non-standard location. Thanks to [@n8henrie] and [@AlucardZero].</p>

<h3><a class="title-link" name="breaking-changes" href="#breaking-changes"></a> Breaking changes</h3>

<ul>
  <li>Migrating existing databases (see above).</li>
  <li>The <a href="https://home-assistant.io/components/sensor.apcupsd/">APCUPSd Sensor</a> was updated. This will need that you modify your <code>configuration.yaml</code> file.</li>
  <li>Entity IDs of Verisure locks will change. This is a one time change but should improve readability.</li>
</ul>

<p>«««&lt; HEAD<br />
=======<br />
[@n8henrie]: https://github.com/n8henrie/<br />
[@AlucardZero]: https://github.com/AlucardZero/<br />
«««&lt; HEAD<br />
»»»&gt; master<br />
=======<br />
[@Danielhiversen]: https://github.com/danielhiversen<br />
»»»&gt; origin/master</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PocketCHIP running Home Assistant]]></title>
    <link href="https://home-assistant.io/blog/2016/07/06/pocketchip-running-home-assistant/"/>
    <updated>2016-07-06T05:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/06/pocketchip-running-home-assistant</id>
    <content type="html"><![CDATA[<p><img src="https://home-assistant.io/images/blog/2016-07-pocketchip/pocketchip-logo.png" style="clear: right; border:none; box-shadow: none; float: right; margin-bottom: 12px;" width="200" /><br />
Over a year ago I participated in the <a href="https://www.kickstarter.com/projects/1598272670/chip-the-worlds-first-9-computer/description">kickstarter campaign</a> for “CHIP - The World’s First Nine Dollar Computer” by <a href="https://www.nextthing.co/">Next Thing Co.</a>. I went for the PocketCHIP because of the idea. Display, built-in storage (thus no need for SD cards), battery-powered, and a keyboard are pretty nice features. Last week a package arrives…</p>

<!--more-->

<p>Thanks to <a href="https://www.nextthing.co/">Next Thing Co.</a> and their CHIP which is actually 9 USD the space requirement for a single board computer has decreased. No Ethernet and HDMI output helped with that. But I guess that the next development cycle will allow us to put those boards in a matchbox including wired networking and a SATA interface.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-pocketchip/size.png" />
  Size comparison of a Cubieboard, OrangePi One, and CHIP.
</p>

<p>If you start using a PocketCHIP you will definitely look like a Blackberry or a GameBoy user. Typing is done with your thumbs :-)</p>

<p>First a couple of tweaks like setting up <code>sudo</code>, upgrading the existing installation, change passwords, enabling ssh, and removal of the annoying stuff then installation of Home Assistant. There is not much to tell…it’s straight-forward. For the sake of completeness below the notes about what I did.</p>

<p>A Debian installation is available by default. This means that some dependencies for Home Assistant are missing. I haven’t checked if a new build for the PocketCHIP would include them. So, after a <code>$ sudo apt-get update</code> installing those dependencies take a minute or two.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo apt-get install python3-dev python3-pip python3-venv
</pre></div>
</div>
</div>

<p>As usual I run Python applications in a <a href="https://docs.python.org/3/library/venv.html">venv</a>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ pvenv ha
</pre></div>
</div>
</div>

<p>Let’s activate the created environment.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ cd ha
$ source bin/activate
</pre></div>
</div>
</div>

<p>If you haven’t seen the next two commands already then you should visit our <a href="https://home-assistant.io/">frontsite</a>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ pip3 install homeassistant
$ hass --open-ui
</pre></div>
</div>
</div>

<p>With <code>surf</code> the browsing experience on the low-resolution display is not that great. Most smartphones, even very cheap ones, have touchscreens with higher resolutions. Nevermind, <a href="https://twitter.com/fabaff/status/748852317047418880"><code>midori</code></a> is not better.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-07-pocketchip/pocketchip.png" />
  PocketCHIP with Home Assistant frontend
</p>

<p>Well, with PocketCHIP and Home Assistant you could run your home automation on a 49 USD device with a touchscreen, an integrated USP, and a keyboard. With the GPIO available on top of the display you could even connect your PocketCHIP directly to sensors and actuators.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.23: Envisalink, Homematic, HDMI-CEC and Sony Bravia TV]]></title>
    <link href="https://home-assistant.io/blog/2016/07/01/envisalink-homematic-hdmi-cec-and-sony-bravia-tv/"/>
    <updated>2016-07-01T00:31:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/07/01/envisalink-homematic-hdmi-cec-and-sony-bravia-tv</id>
    <content type="html"><![CDATA[<p>It’s time for Home Assistant 0.23 and it’s full of goodies. It’s also the release that bumps us over a 1000 tests and to 94% test coverage! Also our install issues on the Raspberry Pi and Synology have been resolved.</p>

<p>This release brings support for two new ecosystems: <a href="https://home-assistant.io/components/envisalink/">Envisalink</a> and <a href="https://home-assistant.io/components/homematic/">Homematic</a>. We can now also control your TV via HDMI using <a href="https://home-assistant.io/components/hdmi_cec/">HDMI-CEC</a> (which works on the Pi!) and another cool feature is the <a href="https://home-assistant.io/components/persistent_notification/">persistent notifications</a> which allow you to add a notification to the frontend till dismissed.</p>

<p><a href="https://home-assistant.io/components/wink/">Wink</a> support has been dramatically improved by migrating to the PubNub API. This allows Wink to push changes from their system to Home Assistant. This change came just in time as somehow our Wink integration was causing a lot of requests to their servers. Thanks to Wink for letting us know so we could solve it instead of blocking us.</p>

<p>On the config side, you can now <a href="https://home-assistant.io/topics/secrets/">store your passwords</a> in your OS keyring or just in a standalone file. We also got a new service to reload the core config so no reboots needed anymore after changing customize settings!</p>

<p><img src="https://home-assistant.io/images/supported_brands/bravia.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/eyezon.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/homematic.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/openexchangerates.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /></p>

<ul>
  <li>Support for <a href="https://home-assistant.io/components/envisalink/">Envisalink</a> added (<a href="https://home-assistant.io/components/alarm_control_panel.envisalink/">alarm control panel</a>, <a href="https://home-assistant.io/components/binary_sensor.envisalink/">binary sensor</a>, <a href="https://home-assistant.io/components/sensor.envisalink/">sensor</a>) (<a href="https://github.com/cinntax/">@cinntax</a>)</li>
  <li>Support for <a href="https://home-assistant.io/components/homematic/">Homematic</a> added (<a href="https://home-assistant.io/components/binary_sensor.homematic/">binary sensor</a>, <a href="https://home-assistant.io/components/light.homematic/">light</a>, <a href="https://home-assistant.io/components/rollershutter.homematic/">rollershutter</a>, <a href="https://home-assistant.io/components/sensor.homematic/">sensor</a>, <a href="https://home-assistant.io/components/switch.homematic/">switch</a>) (<a href="https://github.com/pvizeli/">@pvizeli</a>, <a href="https://github.com/danielperna84/">@danielperna84</a>)</li>
  <li>New <a href="https://home-assistant.io/components/hdmi_cec/">HDMI-CEC</a> component (<a href="https://github.com/happyleavesaoc/">@happyleavesaoc</a>, <a href="https://github.com/lukas-hetzenecker/">@lukas-hetzenecker</a>)</li>
  <li>Major rewrite of <a href="https://home-assistant.io/components/wink/">Wink</a> which now pushes changes to Home Assistant (<a href="https://github.com/w1ll1am23/">@w1ll1am23</a>)</li>
  <li>Core: new add <a href="https://home-assistant.io/getting-started/customizing-devices/#reloading-customize/">reload core config service</a> (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Support for <a href="https://home-assistant.io/components/persistent_notification/">persistent notifications</a> added (<a href="https://github.com/fabaff/">@fabaff</a>, <a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Garage door: <a href="https://home-assistant.io/components/garage_door.zwave/">Z-Wave</a> support added (<a href="https://github.com/turbokongen/">@turbokongen</a>)</li>
  <li>Rollershutter: <a href="https://home-assistant.io/components/rollershutter.zwave/">Z-Wave</a> support added (<a href="https://github.com/turbokongen/">@turbokongen</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.braviatv/">Sony Bravia TV</a> now supported (<a href="https://github.com/aparraga/">@aparraga</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.fixer/">Fixer.io</a> now supported (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
  <li>Garage door: Control any garage door using <a href="https://home-assistant.io/components/garage_door.rpi_gpio/">Raspberry Pi GPIO pins</a> (<a href="https://github.com/kellerza/">@kellerza</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.openexchangerates/">OpenExchangeRates</a> support added (<a href="https://github.com/arsaboo/">@arsaboo</a>)</li>
  <li>Notify: <a href="https://home-assistant.io/components/notify.pushover/">Pushover</a> now supports target device, sound, url and priority (<a href="https://github.com/dale3h/">@dale3h</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.netatmo/">Netatmo</a> now supports wind, battery and radio signals (<a href="https://github.com/Jypy/">@Jypy</a>)</li>
  <li>Log successful and failed login attemps (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
  <li>Config: allow <a href="https://home-assistant.io/topics/secrets/">extracting account info</a> into OS keyring or separate YAML file (<a href="https://github.com/kellerza/">@kellerza</a>)</li>
  <li>Core: add option to not filter out duplicate states per entity (<a href="https://github.com/philipbl/">@philipbl</a>)</li>
  <li>HTTP: Follow Mozilla SSL recommendations (<a href="https://github.com/danieljkemp/">@danieljkemp</a>, <a href="https://github.com/AlucardZero/">@AlucardZero</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/light.zwave/">Z-Wave colorbulb</a> support added (<a href="https://github.com/armills/">@armills</a>)</li>
  <li>Core: new elevation config option added (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.onewire/">OneWire</a> support extended with support for DS18S20, DS1822, DS1825 and DS28EA00 temperature sensors + support for bus masters which use fuse to mount device tree. (<a href="https://github.com/Ardetus/">@Ardetus</a>)</li>
  <li>Lock: <a href="https://home-assistant.io/components/lock.vera/">Vera</a> now supported (<a href="https://github.com/rhooper/">@rhooper</a>)</li>
  <li>HTTP: Migrate to CherryPy WSGI server to fix install and runtime problems (<a href="https://github.com/balloob/">@balloob</a>)</li>
</ul>

<h3><a class="title-link" name="breaking-changes" href="#breaking-changes"></a> Breaking changes</h3>

<ul>
  <li>Homematic thermostat configuration has changed and now depends on the new <a href="https://home-assistant.io/components/homematic/">Homematic</a> component.</li>
</ul>

<h3><a class="title-link" name="hotfix-0231---july-2" href="#hotfix-0231---july-2"></a> Hotfix 0.23.1 - July 2</h3>

<ul>
  <li>Bump PyVera to 0.2.13 to fix traceback and pyvera thread dying related to bug (<a href="https://github.com/rhooper/">@rhooper</a>)</li>
  <li>HTTP - SSL: Check for OP_NO_COMPRESSION support before trying to use it (<a href="https://github.com/AlucardZero/">@AlucardZero</a>)</li>
  <li>Wink: Downgraded pubnub to work around pycryptodome conflicts (<a href="https://github.com/w1ll1am23/">@w1ll1am23</a>)</li>
</ul>

<h3><a class="title-link" name="faq" href="#faq"></a> FAQ</h3>

<ul>
  <li><code>elevation: </code> was introduced to the configuration for weather/sunrise data. For existing <a href="https://home-assistant.io/getting-started/basic/">configurations</a> add the value shown in the warning <code>[homeassistant.config] Incomplete core config. Auto detected elevation: 665</code> to your <code>configuration.yaml</code> file.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using USB webcams with Home Assistant]]></title>
    <link href="https://home-assistant.io/blog/2016/06/23/usb-webcams-and-home-assistant/"/>
    <updated>2016-06-23T06:00:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/06/23/usb-webcams-and-home-assistant</id>
    <content type="html"><![CDATA[<p><img src="https://home-assistant.io/images/blog/2016-06-cranberry/motion.png" style="clear: right; border:none; box-shadow: none; float: right; margin-bottom: 12px;" width="200" /><br />
In the past month I was thinking about ways to integrate USB webcams into Home Assistant again. The main reason was that this would give those devices a second life and enable one to benefit from low-cost video surveillance. There are a couple of options available like <a href="http://www.pygame.org/hifi.html">pygame</a> or <a href="http://www.simplecv.org/">SimpleCV</a> but I never finished something. With the <a href="https://home-assistant.io/components/camera.local_file/">Local File camera platform</a> by <a href="https://github.com/Landrash">Landrash</a> and <a href="http://lavrsen.dk/foswiki/bin/view/Motion/WebHome">motion</a> you could integrate a local USB webcam with a few very easy steps.</p>

<p>In this blog post I am using a Fedora 24 (will most likely work on other distributions too) installation with Home Assistant 0.22.1 on a Foxconn nT-330i with an old <a href="http://support.logitech.com/en_us/product/quickcam-sphere-af">Logitech QuickCam Orbit AF</a> and a <a href="http://support.logitech.com/en_us/product/hd-webcam-c270">Logitech HD Webcam C270</a>. As a start only the Quickcam is used. No multi-camera setup for now.</p>

<!--more-->

<p>Check first if the your operating system lists your cameras.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ lsusb
[...]
Bus 002 Device 016: ID 046d:08cc Logitech, Inc. Mic (PTZ)
[...]
</pre></div>
</div>
</div>

<p>The camera we are going to use is available at <code>/dev/video1</code>. The C270 is the one on <code>/dev/video0</code>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ ls -al /dev/video*
crw-rw----+ 1 root video 81, 0 Jun 23 08:05 /dev/video0
crw-rw----+ 1 root video 81, 1 Jun 23 08:36 /dev/video1
</pre></div>
</div>
</div>

<p>We need an additional software part to handle the cameras. <a href="http://lavrsen.dk/foswiki/bin/view/Motion/WebHome">motion</a> is capable of monitoring the video signal from USB and network cameras, do motion detection, and other nifty stuff like saving images, add text, or basic image manipulations. Make sure that you have the <a href="http://rpmfusion.org/">RPM Fusion respository</a> enabled.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo dnf -y install motion
</pre></div>
</div>
</div>

<p>For our setup we need to modify the file <code>/etc/motion/motion.conf</code>. For now the most important parameters are <code>videodevice</code>, <code>snapshot_interval</code>, and <code>target_dir</code>. The other settings can be left to their defaults. We are going to use the device <code>/dev/video1</code>, use a 30 seconds interval, and set the path to <code>/tmp</code>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>[...]
###########################################################
# Capture device options
############################################################

# Videodevice to be used for capturing  (default /dev/video0)
# for FreeBSD default is /dev/bktr0
videodevice /dev/video1

[..]
############################################################
# Snapshots (Traditional Periodic Webcam File Output)
############################################################

# Make automated snapshot every N seconds (default: 0 = disabled)
snapshot_interval 30

[...]
############################################################
# Target Directories and filenames For Images And Films
# For the options snapshot_, picture_, movie_ and timelapse_filename
# you can use conversion specifiers
# %Y = year, %m = month, %d = date,
# %H = hour, %M = minute, %S = second,
# %v = event, %q = frame number, %t = thread (camera) number,
# %D = changed pixels, %N = noise level,
# %i and %J = width and height of motion area,
# %K and %L = X and Y coordinates of motion center
# %C = value defined by text_event
# Quotation marks round string are allowed.
############################################################

# Target base directory for pictures and films
# Recommended to use absolute path. (Default: current working directory)
target_dir /tmp

[...]
</pre></div>
</div>
</div>

<p>It’s suggested that you adjust at least <code>width</code> and <code>height</code> to get a bigger image from your camera. If you are done, fire up <code>motion</code>.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>$ sudo motion
[0] [NTC] [ALL] conf_load: Processing thread 0 - config file /etc/motion/motion.conf
[0] [ALR] [ALL] conf_cmdparse: Unknown config option &quot;sdl_threadnr&quot;
[0] [NTC] [ALL] motion_startup: Motion 3.3.0 Started
[0] [NTC] [ALL] motion_startup: Logging to file (/var/log/motion.log)
</pre></div>
</div>
</div>

<p>Your <code>target_dir</code> will start filling up with images from your camera. <code>motion</code> will create a symlink called <code>lastsnap.jpg</code> which always point to the latest snapshot. We will setup the <a href="https://home-assistant.io/components/camera.local_file/">Local File camera platform</a> to use this file.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">camera</span>:
  - <span class="string"><span class="content">platform: local_file</span></span>
    <span class="key">name</span>: <span class="string"><span class="content">Cranberry cam</span></span>
    <span class="key">file_path</span>: <span class="string"><span class="content">/tmp/lastsnap.jpg</span></span>
</pre></div>
</div>
</div>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-06-cranberry/cam.png" />
  The “Cranberry cam” in action
</p>

<p>The machine with the attached USB camera will become a webcam server as well because <code>motion</code>’s built-in HTTP server is enabled by default. This means that you could connect your USB webcams to a different machine in your network, run <code>motion</code> there, adjust your firewall rules, and use Home Assistant to display the videos. Just check http://[IP of your webcam host]:8081/ to see the stream. This required more powerful hardware than using snapshots, of course.</p>

<p>In a scenario like this needs a <a href="https://home-assistant.io/components/camera.mjpeg/">Generic MJPEG IP Camera </a> in your <code>configuration.yaml</code> file.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">camera</span>:
  - <span class="string"><span class="content">platform: mjpeg</span></span>
    <span class="key">mjpeg_url</span>: <span class="string"><span class="content">http://[IP of your webcam host]:8081</span></span>
    <span class="key">name</span>: <span class="string"><span class="content">Cranberry Live cam</span></span>
</pre></div>
</div>
</div>

<p><a href="http://lavrsen.dk/foswiki/bin/view/Motion/WebHome">motion</a> is a powerful tool and this blog post only showed two very simple use cases. Take a look at the <a href="http://www.lavrsen.dk/foswiki/bin/view/Motion/MotionGuide">documentation</a> of <code>motion</code> to unleash its potential.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.22: Pandora, BT Home Hub 5 and local file camera.]]></title>
    <link href="https://home-assistant.io/blog/2016/06/18/pandora-bt-home-hub-5-and-local-file-camera/"/>
    <updated>2016-06-18T18:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/06/18/pandora-bt-home-hub-5-and-local-file-camera</id>
    <content type="html"><![CDATA[<p>It’s time for the 0.22 release. This was a pretty rough release cycle and we had to issue two hot fixes for our core improvements. But it seems now that all is good and a lot of people have reported that their installs are faster than ever and the occasional quirks no longer occur.</p>

<p>We are aware that our new web stack has caused issues installing Home Assistant on ARM-based platforms. This sadly includes the Raspberry Pi and Synology NAS systems. We’re working on getting to a better solution. For Raspberry Pi, the <a href="https://home-assistant.io/getting-started/installation-raspberry-pi-all-in-one/">All-in-One installer</a> will take care of everything for you. We’re working on updating our <a href="https://home-assistant.io/getting-started/installation-raspberry-pi/">standalone Raspberry Pi installation guide</a>.</p>

<p>There are two cool things that I want to highlight in this release. The first is Pandora support. This is based on the CLI player called pianobar. This means that your machine running Home Assistant can be connected to the speakers and provide your house with tunes.</p>

<p class="img">
<img src="https://home-assistant.io/images/screenshots/pandora_player.png" />
</p>

<p>Another cool addition is the local file camera. This seems very basic at first but will allow you to generate a graph with your favorite 3rd party graphing tool and display it on your Home Assistant dashboard. We’re looking forward to see what you can do with this!</p>

<p><img src="https://home-assistant.io/images/supported_brands/pandora.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/bt.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /></p>

<ul>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.pandora/">Pandora</a> media player now supported (<a href="https://github.com/partofthething/">@partofthething</a>)</li>
  <li>Device Tracker: <a href="https://home-assistant.io/components/device_tracker.bt_home_hub_5/">BT Home Hub 5</a> now supported (<a href="https://github.com/lwis/">@lwis</a>)</li>
  <li>Camera: New <a href="https://home-assistant.io/components/camera.local_file/">local file</a> platform shows any image as camera (<a href="https://github.com/Landrash/">@Landrash</a>)</li>
  <li>Add <a href="https://home-assistant.io/components/media_player.sonos/">Sonos</a> snapshot and restore services (<a href="https://github.com/dansullivan86/">@dansullivan86</a>)</li>
  <li>Device Tracker: <a href="https://home-assistant.io/components/device_tracker.asuswrt/">AsusWRT</a> in Access Point mode now supported (<a href="https://github.com/linjef/">@linjef</a>)</li>
  <li>Device Tracker: <a href="https://home-assistant.io/components/device_tracker.asuswrt/">AsusWRT</a> login using public key now supported (<a href="https://github.com/mtreinish/">@mtreinish</a>)</li>
  <li>Device Tracker: <a href="https://home-assistant.io/components/device_tracker.asuswrt/">AsusWRT</a> protocol to use is now auto detected (<a href="https://github.com/persandstrom/">@persandstrom</a>)</li>
  <li>Camera: <a href="https://home-assistant.io/components/netatmo/">Netatmo</a> now supported (<a href="https://github.com/jabesq/">@jabesq</a>)</li>
  <li>API documentation added  in <a href="https://github.com/home-assistant/home-assistant/blob/dev/docs/swagger.yaml">Swagger.yaml format</a> (<a href="https://github.com/wind/">@wind-rider</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.cast/">Cast</a> devices can now be stopped (<a href="https://github.com/michaelarnauts/">@michaelarnauts</a>)</li>
  <li>MySensors: <a href="https://home-assistant.io/components/mysensors/">IR switch device</a> and service now supported (<a href="https://github.com/MartinHjelmare/">@MartinHjelmare</a>)</li>
  <li>Bloomsky: <a href="https://home-assistant.io/components/sensor.bloomsky/">Voltage sensor</a> now supported (<a href="https://github.com/arsaboo/">@arsaboo</a>)</li>
  <li>Sensor: New <a href="https://home-assistant.io/components/sensor.plex/">Plex sensor</a> monitors friends streaming from your Plex server (<a href="https://github.com/nkgilley/">@nkgilley</a>)</li>
  <li>Component <a href="https://home-assistant.io/components/shell_command/">shell command</a> can now use templates to render arguments (<a href="https://github.com/partofthething/">@partofthething</a>)</li>
  <li>Rollershutter: <a href="https://home-assistant.io/components/rollershutter.wink/">Wink</a> is now supported (<a href="https://github.com/philk/">@philk</a>)</li>
  <li>Alexa: Updated <a href="https://home-assistant.io/components/alexa/#working-with-scenes/">documentation</a> to show how to call scripts and scenes (@acockburn)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.snmp/">SNMP</a> is now supported (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
  <li>Sensor: Support for Swiss hydrological data (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
</ul>

<h3><a class="title-link" name="breaking-change" href="#breaking-change"></a> Breaking change</h3>

<ul>
  <li>The new Netatmo support caused us to change how Netatmo are configured. It’s now done via it’s own component.</li>
</ul>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">netatmo</span>:
    <span class="key">api_key</span>: <span class="string"><span class="content">API_KEY</span></span>
    <span class="key">secret_key</span>: <span class="string"><span class="content">SECRET_KEY</span></span>
    <span class="key">username</span>: <span class="string"><span class="content">username</span></span>
    <span class="key">password</span>: <span class="string"><span class="content">password</span></span>
</pre></div>
</div>
</div>

<h3><a class="title-link" name="hotfix-0221---june-20" href="#hotfix-0221---june-20"></a> Hotfix 0.22.1 - June 20</h3>

<ul>
  <li>Insteon Hub lights will load again</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Home Assistant at PyCon 2016]]></title>
    <link href="https://home-assistant.io/blog/2016/06/13/home-assistant-at-pycon-2016/"/>
    <updated>2016-06-13T01:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/06/13/home-assistant-at-pycon-2016</id>
    <content type="html"><![CDATA[<p>It’s been already almost two weeks ago that a few of the Home Assistant developers headed towards Portland for <a href="https://us.pycon.org/2016/">PyCon 2016</a> - the conference about everything Python. We were there to learn all the nifty tricks to make our code better but most of all, to talk Home Automation.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-06-pycon/crew.jpg" alt="Home Assistant developers" />
  Couple of Home Assistant devs. Left to right: <a href="https://github.com/balloob/">Paulus (@balloob)</a>, <a href="https://github.com/infamy/">Alex (@infamy)</a>, <a href="https://github.com/rmkraus/">Ryan (@rmkraus)</a>.
</p>

<p>On Monday I (Paulus) gave a presentation about Home Assistant to an audience of over 400 people! It was a bit scary at first but after a couple of minutes it went all great including some great questions afterwards. Slides can be found <a href="https://docs.google.com/presentation/d/1F1pGOoSf0dD79Dl5dgys0ll7xiuIA4XiQeNeJ-xlqMg/edit">here</a> and the talk is embedded right below:</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/UhccJacWhdM" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>One of the things that really impressed me was the amount of people that approached us to tell how they love Home Assistant, how it has replaced their previous solution, how they enjoyed contributing to Home Assistant and how helpful our community is. It makes me proud of Home Assistant and especially our community.</p>

<!--more-->
<p>PyCon has a few great concepts that I haven’t seen at other conferences: open spaces and sprints. Open spaces give anyone the opportunity to get a room and host a session for an hour to talk about any topic. Sprints happen after the conference part of PyCon is over. For four days there are rooms available for participants to get together and hack on their favorite open source projects.</p>

<p>My talk had limited time for Q&amp;A so open spaces offered a great opportunity to get all pending questions answered and connect with the commmunity. There was more interest after the first day so we ended up hosting another open space on the second day.</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr"><a href="https://twitter.com/anschoen">@anschoen</a> <a href="https://twitter.com/home_assistant">@home_assistant</a> I&#39;m located in Detroit. I could facilitate a workshop. What are we talking (group, potential dates, etc)?</p>&mdash; Jonathan Baginski (@jbags81) <a href="https://twitter.com/jbags81/status/739057625636167680">June 4, 2016</a></blockquote>

<p>We’ve had such positive reception on our open spaces that <a href="https://github.com/jbags81/">Jonathan Baginski</a> decided to repeat it online. We will be hosting a free online webinar <a href="https://www.eventbrite.com/e/home-assistant-support-101-getting-around-in-home-assistant-tickets-25943868810">Home Assistant Support 101 - Getting around in Home Assistant</a> later this month. Make sure to RSVP.</p>

<p>After the conference part of PyCon was over we spent one extra day to host a Home Assistant sprint. This allowed us to help people get started with hacking on Home Assistant which lead to some great contributions.</p>

<p class="img">
  <img src="https://home-assistant.io/images/blog/2016-06-pycon/sprint.jpg" alt="Home Assistant sprint group photo" />
  Home Assistant sprint group photo.
</p>

<p>I’ve had a really great time at PyCon. It was awesome to meet everyone in person and I hope to see many of you next year!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.21: Improved Web and support for EnOcean, LIRC and Osram Lightify]]></title>
    <link href="https://home-assistant.io/blog/2016/06/08/super-fast-web-enocean-lirc/"/>
    <updated>2016-06-08T01:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/06/08/super-fast-web-enocean-lirc</id>
    <content type="html"><![CDATA[<p>It’s time for release 0.21 and it contains massive core improvements: replacement of our home grown HTTP stack with a standardized WSGI stack. This will improve performance, speed, security and make future development of advanced HTTP features a breeze.</p>

<p>This work was driven by the amazing Josh Wright. His knowledge, high standards and drive for security has helped improve Home Assistant a lot ever since he started helping out. Hip hip hurray for Josh!</p>

<p>Alright, time for the changes:</p>

<p><img src="https://home-assistant.io/images/supported_brands/enocean.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/osramlightify.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/lirc.gif" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /></p>

<ul>
  <li>New HTTP stack based on WSGI (<a href="https://github.com/JshWright">@JshWright</a>, <a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Frontend: lots of performance improvements (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Initial support for EnOcean <a href="https://home-assistant.io/components/light.enocean/">lights</a>, <a href="https://home-assistant.io/components/sensor.enocean/">sensors</a> and <a href="https://home-assistant.io/components/switch.enocean/">switches</a> added (<a href="https://github.com/rubund">@rubund</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/light.osramlightify/">Osram Lightify</a> is now supported (<a href="https://github.com/olimpiurob">@olimpiurob</a>)</li>
  <li>Light: <a href="https://home-assistant.io/components/insteon_hub/">Insteon Hub</a> now supports brightness (<a href="https://github.com/wkonkel">@wkonkel</a>)</li>
  <li>Add support for adding HA as Windows 10 tile (<a href="https://github.com/fabaff">@fabaff</a>)</li>
  <li>Condition: <a href="https://home-assistant.io/getting-started/scripts-conditions/#time-condition/">time condition</a> can now cross midnight (<a href="https://github.com/jaharkes">@jaharkes</a>)</li>
  <li>Template based sensors should now throw less warnings (<a href="https://github.com/Bart274">@Bart274</a>)</li>
  <li>New <a href="https://home-assistant.io/components/lirc/">LIRC component</a> allows receiving IR commands (<a href="https://github.com/partofthething">@partofthething</a>)</li>
  <li>The <a href="https://home-assistant.io/components/feedreader/">Feedreader</a> component will now persist data to disk to prevent duplicate events (<a href="https://github.com/shaftoe">@shaftoe</a>)</li>
  <li>Sun: azimuth attribute added (<a href="https://github.com/fabaff">@fabaff</a>)</li>
  <li>New <a href="https://home-assistant.io/components/switch.flux/">Flux like switch platform</a> to change light intensity in the evening (<a href="https://github.com/nkgilley">@nkgilley</a>)</li>
  <li>We no longer crash if you live in a part of the world where the sun never sets (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Rollershutter: <a href="https://home-assistant.io/components/rfxtrx/">RFXTRX</a> now supported (<a href="https://github.com/jacobtomlinson">@jacobtomlinson</a>)</li>
  <li>Switch: <a href="https://home-assistant.io/components/switch.template/">Template switches</a> can now execute scripts (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Z-Wave: automatically heal the network at midnight (<a href="https://github.com/infamy">@infamy</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.dte_energy_bridge/">DTE Energy Bridge</a> now supported (<a href="https://github.com/kylehendricks">@kylehendricks</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.kodi/">Kodi</a> now supports different turn off commands (<a href="https://github.com/armills">@armills</a>)</li>
</ul>

<h3>Breaking Changes</h3>

<ul>
  <li>Our work in the WSGI stack is not fully done yet. We still have a minor issues where retrieving the error log in the about screen can raise an encoding error</li>
  <li>The API used to incorrectly accept a JSON body with form-url-encoded headers. Our cURL examples on the website used to be wrong and have <a href="https://home-assistant.io/developers/rest_api/">been updated</a>.</li>
  <li>Make sure your configuration.yaml file contains <code>frontend:</code> to serve the frontend</li>
</ul>

<h3>Hotfixes 0.21.1 and 0.21.2</h3>

<p>We released two hotfixes to address some issues that couldn’t wait till the next release.</p>

<h5>0.21.1 - June 12</h5>

<ul>
  <li>Add eventlet to base requirements to resolve some installation issues (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>GTFS will filter out routes in the wrong direction (<a href="https://github.com/imrehg">@imrehg</a>)</li>
  <li>Recover from rare error condition from LIRC (<a href="https://github.com/partofthething">@partofthething</a>)</li>
  <li>Z-Wave autoheal will no longer raise exception (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Alexa will now execute the script before making reply (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Fix MJPEG camera streaming (<a href="https://github.com/stjohnjohnson">@stjohnjohnson</a>)</li>
  <li>Fix frontend in older browsers (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Fix history in more info dialog being cut off (<a href="https://github.com/balloob">@balloob</a>)</li>
</ul>

<h5>0.21.2 - June 15</h5>

<ul>
  <li>Fix input_select calling the set_option service again when changed (<a href="https://github.com/persandstrom">@persandstrom</a>)</li>
  <li>Fix more info dialog not being able to open on Safari (<a href="https://github.com/balloob">@balloob</a>)</li>
  <li>Add support for OPTIONS HTTP command to get CORS working (<a href="https://github.com/JshWright">@JshWright</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Community Highlights]]></title>
    <link href="https://home-assistant.io/blog/2016/06/01/community-highlights/"/>
    <updated>2016-06-01T18:34:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/06/01/community-highlights</id>
    <content type="html"><![CDATA[<p>Our community is amazingly helpful and creative. If you haven’t been there yet, make sure to stop by our <a href="https://gitter.im/home-assistant/home-assistant">chat room</a> and come hang out with us. In this blog post I want to highlight a few recent awesome projects and videos from the community.</p>

<h3><a class="title-link" name="scenegen---cli-for-making-scenes" href="#scenegen---cli-for-making-scenes"></a> SceneGen - cli for making scenes</h3>

<p><a href="https://github.com/acockburn/scenegen">SceneGen</a> is a new command line utility developed by <a href="https://github.com/acockburn">Andrew Cockburn</a> that helps with creating scene configurations for Home Assistant. To use it, you put your house in the preferred state, run SceneGen and it will print the scene configuration for your current states.</p>

<h3><a class="title-link" name="videos" href="#videos"></a> Videos</h3>

<p><a href="https://partofthething.com">Nick Touran</a> has been working on integrating IR remotes with Home Assistant. He made it into a component which should be available in the next release which should arrive in a couple of days. In the meanwhile, he wrote up <a href="https://partofthething.com/thoughts/?p=1010">a blog post</a> and has put out a video showing the new integration, very cool!</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/6I_Lfpda0hc" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>Ben from <a href="http://www.bruhautomation.com/">BRUH Automation</a> has put out another great video how to get started tracking your location in Home Assistant using MQTT and OwnTracks.</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/VaWdvVVYU3A" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>Muhammed Kilic has created a video how to make your Home Assistant instance accessible from the internet using the free dynamic DNS service DuckDNS.</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/UM15pRk56h8" frameborder="0" allowfullscreen=""></iframe>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iBeacons: How to track things that can’t track themselves (part II)]]></title>
    <link href="https://home-assistant.io/blog/2016/05/26/ibeacons-how-to-track-things-that-cant-track-themselves-part-ii/"/>
    <updated>2016-05-26T11:06:12+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/26/ibeacons-how-to-track-things-that-cant-track-themselves-part-ii</id>
    <content type="html"><![CDATA[<p><em>This post is by Home Assistant contributor <a href="https://github.com/pavoni">Greg Dowling</a>.</em></p>

<p>In <a href="https://home-assistant.io/blog/2016/04/30/ibeacons-part-1-making-presence-detection-work-better/">Part 1</a> I talked about using iBeacons to improve presence tracking. In part 2 I’ll talk about how to track things like keys that can’t track themselves by using iBeacons.</p>

<h3><a class="title-link" name="tracking-things-using-ibeacons" href="#tracking-things-using-ibeacons"></a> Tracking things using iBeacons</h3>
<p>In the first part I mentioned that iBeacons just send out <em>I’m here</em> packets, and we used this to trigger an update when your phone came close to a fixed beacon.</p>

<p>But beacons don’t have to be fixed.</p>

<p>Your phone knows roughly where it is located (based on mobile phone masts, Wi-Fi networks or GPS). If your phone sees an <em>I’m here</em> message then it knows the beacon is close.</p>

<p>If your phone can remember (or tell a server) where it was when it last saw the iBeacon - then it knows where the beacon was. So the result of this is that you can track where an iBeacon was - even though the iBeacon doesn’t have any tracking technology itself.</p>

<p>So if you put an iBeacon on your keys or in your car - then you can track them.</p>

<p class="img">
  <img width="200" src="https://home-assistant.io/images/blog/2016-05-ibeacons/keys_with_beacon.jpg" />
  Here are my keys - with a Estimote Nearable iBeacon stuck to them. Ugly but effective!
</p>

<!--more-->

<p>It’s easier to set up OwnTracks and HA to track a mobile beacon than the fixed beacon I discussed in Part 1, because you only need to tell OwnTracks about your iBeacon. You don’t need to configure HA at all.</p>

<p class="note warning">OwnTracks currently only supports mobile beacons on iOS.</p>

<p>You set up the beacon the same way as we discussed in part 1. The only difference is that instead of calling the region the name of a location (eg -drive) you call it the name of the device you want to track (eg -keys). Remember the leading ‘-’ that makes the connection more reliable.</p>

<p class="img">
  <img width="200" src="https://home-assistant.io/images/blog/2016-04-ibeacons/owntracks_beacon_setup.png" />
</p>

<p>Once you’ve added the iBeacon - you should be able to see it on the OwnTracks region screen. If your phone can see the packets from that beacon, OwnTracks will turn the relevant Region red.</p>

<p>Because you turned <em>Share</em> on for the region, when OwnTracks sees the beacon it will send HA a message. HA will use this message to add the beacon as a tracked device if it hasn’t seen it before. So you should see a new device appear in HA called device_tracker.beacon_[name] - and its location will be where your phone thought it was when it last saw the beacon.</p>

<p class="img">
  <img width="200" src="https://home-assistant.io/images/blog/2016-05-ibeacons/keys_device.png" />
</p>

<p>If your phone moves and sends HA a new location while it is still in range of the beacon - HA will update the location of the beacon. So if go for a drive in your car - you will see both your phone and the <em>device_tracker.beacon_car</em> move together.</p>

<p>If you park your car and go shopping - <em>device_tracker.beacon_car</em> will stop moving.</p>

<p>With the basic tracking working - you can use automation to do things like open your gates if your car comes home</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">automation</span>:
    - <span class="string"><span class="content">alias: 'Open gate'</span></span>
      <span class="key">trigger</span>:
        - <span class="string"><span class="content">platform: state</span></span>
          <span class="key">entity_id</span>: <span class="string"><span class="content">device_tracker.beacon_car</span></span>
          <span class="key">from</span>: <span class="string"><span class="content">'not_home'</span></span>
          <span class="key">to</span>: <span class="string"><span class="content">'home'</span></span>
      <span class="key">condition</span>:
        - <span class="string"><span class="content">condition: state</span></span>
          <span class="key">entity_id</span>: <span class="string"><span class="content">switch.gate</span></span>
          <span class="key">state</span>: <span class="string"><span class="content">'off'</span></span>
      <span class="key">action</span>:
          <span class="key">service</span>: <span class="string"><span class="content">switch.turn_on</span></span>
          <span class="key">entity_id</span>: <span class="string"><span class="content">switch.gate</span></span>
</pre></div>
</div>
</div>

<p>Or warn you if you leave your keys behind</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">automation</span>:
  - <span class="string"><span class="content">alias: 'Forgotten keys'</span></span>
    <span class="key">trigger</span>:
      <span class="key">platform</span>: <span class="string"><span class="content">template</span></span>
      <span class="key">value_template</span>: <span class="string"><span class="content">'{{states.device_tracker.greg_gregphone.state != states.device_tracker.beacon_keys.state}}'</span></span>
    <span class="key">condition</span>:
      <span class="key">condition</span>: <span class="string"><span class="content">template</span></span>
      <span class="key">value_template</span>: <span class="string"><span class="content">'{{ states.device_tracker.greg_gregphone.state != &quot;home&quot; }}'</span></span>
    <span class="key">action</span>:
      <span class="key">service</span>: <span class="string"><span class="content">script.turn_on</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">script.send_key_alert</span></span>

  - <span class="string"><span class="content">alias: 'Forgotten keys - cancel'</span></span>
    <span class="key">trigger</span>:
      <span class="key">platform</span>: <span class="string"><span class="content">template</span></span>
      <span class="key">value_template</span>: <span class="string"><span class="content">'{{states.device_tracker.greg_gregphone.state == states.device_tracker.beacon_keys.state}}'</span></span>
    <span class="key">condition</span>:
      - <span class="string"><span class="content">condition: state</span></span>
        <span class="key">entity_id</span>: <span class="string"><span class="content">script.send_key_alert</span></span>
        <span class="key">state</span>: <span class="string"><span class="content">'on'</span></span>
    <span class="key">action</span>:
      <span class="key">service</span>: <span class="string"><span class="content">script.turn_off</span></span>
      <span class="key">entity_id</span>: <span class="string"><span class="content">script.send_key_alert</span></span>
</pre></div>
</div>
</div>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">script</span>:
  <span class="key">send_key_alert</span>:
    <span class="key">sequence</span>:
      - <span class="string"><span class="content">delay:</span><span class="content">
          minutes: 2</span></span>
      - <span class="string"><span class="content">service: notify.notify</span></span>
        <span class="key">data</span>:
            <span class="key">message</span>: <span class="string"><span class="content">'You forgot your keys'</span></span>
            <span class="key">target</span>: <span class="string"><span class="content">'device/gregs_iphone'</span></span>
</pre></div>
</div>
</div>

<p>(The delay is needed for two reasons: -<br />
1. HA updates the beacon and phone locations at slightly different times - so you don’t want the automation to trigger in the gap between the updates<br />
2. I’ve found that beacons (especially the low power Estimote Nearables) can get disconnected for a few seconds so it’s best to wait a minute or so before deciding that you’ve left your keys behind)</p>

<h3><a class="title-link" name="using-both-types-of-ibeacons-at-the-same-time" href="#using-both-types-of-ibeacons-at-the-same-time"></a> Using both types of iBeacons at the same time</h3>
<p>Of course you can use both fixed and mobile beacons at the same time. I want my gates to open when I arrive home in the car - so I use an iBeacon in the car so that I can track the car, and a iBeacon on my drive so that a location update is triggered when I arrive. I’ve been experimenting with a high power beacon in a waterproof box on my drive which seems to work well to notice when I get home.</p>

<p class="img">
  <img width="300" src="http://bluesensenetworks.com/wp-content/uploads/2015/02/BlueBar-Beacon-Long-Range.jpg" />
</p>
<p>Long range / High power beacon</p>

<p class="img">
  <img width="400" src="http://bluesensenetworks.com/wp-content/uploads/2015/02/BlueBar-Beacon-Weatherproof.jpg" />
</p>
<p>Waterproof beacon</p>

<h3><a class="title-link" name="buying-beacons" href="#buying-beacons"></a> Buying Beacons</h3>
<p>This isn’t a buyer’s guide, but I just wanted to mention the iBeacons I’ve been using. I think you should be able to use any iBeacon with HA and OwnTracks. You generally can’t buy beacons in your local electronics shop - so I just wanted to briefly mention the two suppliers I’ve used so far.</p>

<p>I’ve bought quite a few iBeacons from a company called <a href="http://bluesensenetworks.com/">Blue Sense Networks</a>. I work in the tech startup sector in the UK so I partly chose them because they are a local start-up who seemed worth supporting. The products, support and software all seem good. I use a number of their beacons - from a simple USB dongle, to a long range beacon. All their products have batteries that can be changed (or no batteries in the case of the externally powered USB device) - and you can configure all the parameters you’d want to using their software. I had one software issue, support got back to me at a weekend(!) - and the issue was resolved with a software release two days later.</p>

<p>All the beacons seem fine - and the long range unit does work over a longer range than my other beacons.</p>

<p>I bought some other beacons from a US/Polish startup called <a href="http://estimote.com/">Estimote</a>, who I think are better known. I bought a developer pack of 10 of their <em>nearables</em> which as well as being iBeacons also send out other data (orientation and motion) using their own protocol. This is interesting if you’re developing your own application, but for OwnTracks and HA they are just regular beacons. They are small and self adhesive - so you can stick them to things (like your keys). You can’t change all the parameters on these devices (UUID/Major/Minor are fixed) - and the batteries can’t be replaced. I also killed one of the estimote beacons (I assume the battery died) after I carried it around for a few months and dropped it many times! On the other hand they are well priced, small and waterproof!</p>

<p>I’ve mainly used these as <em>devices to track</em> rather that <em>location</em> beacons. Estimote also sell some slightly larger iBeacons with replaceable batteries. Estimote support responded quickly and were helpful when I couldn’t work out how to edit their beacon’s parameters (although the answer was <em>you can’t yet</em>).</p>

<p>The larger Blue Sense Network beacons seem to be better at maintaining a connection that the Estimotes - although that might be because I’m reluctant to turn the power to maximum and reduce the gap between sending packets on the Estimotes where I can’t replace the batteries!</p>

<h3><a class="title-link" name="conclusion" href="#conclusion"></a> Conclusion</h3>
<p>As I said in <a href="https://home-assistant.io/blog/2016/04/30/ibeacons-part-1-making-presence-detection-work-better/">part 1</a>, I’ve found iBeacons to be a good way of improving presence detection. I also used them to track devices like my car and my keys that can’t track themselves.</p>

<p>I’m still experimenting, so I hope I can do more with iBeacons. I hope I’ve encouraged you do so the same. If you do please share your experiences.</p>

<h3><a class="title-link" name="notes" href="#notes"></a> Notes</h3>

<p>Please see the <a href="https://home-assistant.io/blog/2016/04/30/ibeacons-part-1-making-presence-detection-work-better/#tips/">notes at the end of Part 1</a> for documentation information.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi all-in-one installer]]></title>
    <link href="https://home-assistant.io/blog/2016/05/22/get-started-with-all-in-one-installer/"/>
    <updated>2016-05-22T16:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/22/get-started-with-all-in-one-installer</id>
    <content type="html"><![CDATA[<p>We are always hard at work at the virtual Home Assistant headquarters to make it easier for you to get started with Home Assistant. That’s why <a href="https://github.com/jbags81">@jbags81</a> recently introduced the <a href="https://home-assistant.io/getting-started/installation-raspberry-pi-all-in-one/">all-in-one installer</a>. It allows you to get up and running with a complete Home Assistant setup by entering one line of code into your Raspberry Pi running Raspbian Jessie:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>wget -Nnv https://raw.githubusercontent.com/home-assistant/fabric-home-assistant/master/hass_rpi_installer.sh &amp;&amp; bash hass_rpi_installer.sh;
</pre></div>
</div>
</div>

<p>This feature wouldn’t be complete if it wasn’t accompanied by a new video by Ben from <a href="http://www.bruhautomation.com">BRUH Automation</a>. The video shows how to install Raspbian Jessie on your Raspberry Pi and use the new installation script to get a full Home Assistant system up and running.</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/VGl3KTrYo6s" frameborder="0" allowfullscreen=""></iframe>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.20: Roku, Last.fm, AWS, Twilio]]></title>
    <link href="https://home-assistant.io/blog/2016/05/21/release-020/"/>
    <updated>2016-05-21T18:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/21/release-020</id>
    <content type="html"><![CDATA[<p><img src="https://home-assistant.io/images/supported_brands/roku.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/lastfm.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="150" /><img src="https://home-assistant.io/images/supported_brands/gpmdp.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="100" /><img src="https://home-assistant.io/images/supported_brands/twilio.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="100" /><img src="https://home-assistant.io/images/supported_brands/aws_lambda.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="100" /><img src="https://home-assistant.io/images/supported_brands/aws_sns.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="100" /><img src="https://home-assistant.io/images/supported_brands/aws_sqs.png" style="clear: right; margin-left: 5px; border:none; box-shadow: none; float: right; margin-bottom: 16px;" width="100" /></p>

<p>Tons of new supported things in 0.20.</p>

<ul>
  <li>Restarting now supported without forking (<a href="https://github.com/jaharkes">@jaharkes</a>)</li>
  <li>Add <a href="https://home-assistant.io/components/recorder/">purge days option</a> to recorder component (<a href="https://github.com/justyns">@justyns</a>, <a href="https://github.com/infamy">@infamy</a>)</li>
  <li>Generic load_platform mechanism for entity components (<a href="https://github.com/kellerza">@kellerza</a>)</li>
  <li>Template: new <a href="https://home-assistant.io/topics/templating/#home-assistant-template-extensions/"><code>relative_time</code></a> function to render ie. <code>7 seconds ago</code> (<a href="https://github.com/robbiet480">@robbiet480</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.supervisord/">supervisord</a> now supported (<a href="https://github.com/happyleavesaoc">@happyleavesaoc</a>)</li>
  <li>Docker: we should no longer get SSL errors with requests (<a href="https://github.com/lwis">@lwis</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.gpmdp/">Google Play Music Desktop Player</a> now supported (<a href="https://github.com/GreenTurtwig">@GreenTurtwig</a>)</li>
  <li>Notify: <a href="https://home-assistant.io/components/notify.twilio_sms/">Twilio SMS</a> platform added (<a href="https://github.com/robbiet480">@robbiet480</a>)</li>
  <li>Device Tracker: <a href="https://home-assistant.io/components/device_tracker.asuswrt/">Asus WRT</a> will now default to SSH (but telnet is still an option) (<a href="https://github.com/froz">@froz</a>)</li>
  <li>Support <a href="https://home-assistant.io/components/sensor.nest/">Nest Protect</a> smoke alarms (<a href="https://github.com/khabi">@khabi</a>)</li>
  <li>Configurator: allow supplying a link to the user (<a href="https://github.com/mnestor">@mnestor</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.roku/">Roku</a> now supported (<a href="https://github.com/bah2830">@bah2830</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.lastfm/">Last.fm</a> now supported (<a href="https://github.com/darookee">@darookee</a>, <a href="https://github.com/GreenTurtwig">@GreenTurtwig</a>)</li>
  <li>Notify: Amazon <a href="https://home-assistant.io/components/notify.aws_lambda/">Lambda</a>, <a href="https://home-assistant.io/components/notify.aws_sns/">SNS</a>, <a href="https://home-assistant.io/components/notify.aws_sqs/">SQS</a> now supported (<a href="https://github.com/robbiet480">@robbiet480</a>)</li>
  <li>Light: allow human readable colors in turn_on command (<a href="https://github.com/robbiet480">@robbiet480</a>)</li>
  <li>YAML: new include dir options <a href="https://home-assistant.io/topics/splitting_configuration/#advanced-usage/"><code>!include_dir_merge_list</code></a> and <a href="https://home-assistant.io/topics/splitting_configuration/#advanced-usage/"><code>!include_dir_merge_named</code></a> (<a href="https://github.com/happyleavesaoc">@happyleavesaoc</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.lg_netcast/">LG Netcast TVs</a> now supported (<a href="https://github.com/wokar">@wokar</a>)</li>
  <li>Media Player: Allow enqueuing media on Sonos (<a href="https://github.com/shaftoe">@shaftoe</a>)</li>
  <li>Notify: <a href="https://home-assistant.io/components/notify.ecobee/">Ecobee thermostats</a> now supported (<a href="https://github.com/nkgilley">@nkgilley</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.moldindicator/">Mold indicator</a> added (<a href="https://github.com/xifle">@xifle</a>)</li>
  <li>Export to <a href="https://home-assistant.io/components/logentries/">Logentries</a> support added (<a href="https://github.com/omgapuppy">@omgapuppy</a>)</li>
  <li>Group more info dialog allows control of group domain if available (<a href="https://github.com/fignuts">@fignuts</a>)</li>
</ul>

<h3><a class="title-link" name="breaking-changes" href="#breaking-changes"></a> Breaking changes</h3>

<ul>
  <li>Asus WRT will now default to SSH with Telnet being an option</li>
</ul>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">device_tracker</span>:
  <span class="key">platform</span>: <span class="string"><span class="content">asuswrt</span></span>
  <span class="key">protocol</span>: <span class="string"><span class="content">telnet</span></span>
</pre></div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why we use web components and Polymer]]></title>
    <link href="https://home-assistant.io/blog/2016/05/18/why-we-use-polymer/"/>
    <updated>2016-05-18T00:09:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/18/why-we-use-polymer</id>
    <content type="html"><![CDATA[<p>I’ve been planning to write this post for a while now as we get questions like this a lot: <em>“Why does Home Assistant use Polymer? Why not React, Redux and what not?”</em></p>

<p>It’s understandable, Polymer is quite the underdog in the world of web frameworks. A corporate backer does not guarantee popularity or an active community and this shows in the number of projects using Polymer.</p>

<p>Still, <a href="https://home-assistant.io/demo">we use Polymer and it’s awesome</a>. To explain why, I’ll be referencing the React workflow quite a bit, as they do a lot of things right, and show how it is done in Polymer.</p>

<p>Polymer gives us components for the web, just like React, but based on web standards: <a href="https://www.w3.org/standards/techs/components#w3c_all">web components</a>, <a href="https://www.w3.org/TR/css-variables/">CSS variables</a>. These standards don’t have wide browser support yet but it’s being implemented by every major browser: It’s the future. For now they are being polyfilled and that works just fine but in the future the Home Assistant web app will be able to run native in the browsers == fast.</p>

<!--more-->

<p>Polymer does not have the nice developer experience that one can have with React and the <a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en">React Dev Tools</a> but that’s a matter of time. The developer tools in every browser have seen a lot of improvements recently and each improvement helps support for web components.</p>

<p>Another major benefit of Polymer for Home Assistant is that we get <a href="https://elements.polymer-project.org/browse?package=paper-elements">material design for free</a>. The material design components that come with Polymer have a very high quality. Google is using these components themselves and make sure that performance and accessibility using screen readers/keyboards are great. As an open source project, the more we can outsource, the better - so our contributors can focus on the core product: home automation.</p>

<p>What about Flux, data management and interaction between components? It’s actually pretty similar to React or any other component based framework. Flux-like architectures work with Polymer just like with React: whenever data changes it will update the attributes of a component which will propagate to the children. For Home Assistant we use <a href="https://optimizely.github.io/nuclear-js/">NuclearJS</a> with our <a href="http://paulusschoutsen.nl/blog/2015/07/using-polymer-with-flux-and-a-global-app-state/">own Polymer bindings</a>. For data moving from child to parent the Polymer pattern is using DOM events instead of callbacks but the end result is the same. It is so similar in fact, that it took me only two hours to make a <a href="https://github.com/balloob/home-assistant-react-native-ios">React Native frontend for on top of our core</a>.</p>

<p>So what about Babel and ES2015? Also this is covered. Each web component exists of a HTML template and a JavaScript class to back it. Think of the HTML template as the render method in React. In Home Assistant we have the HTML templates import one another and have a separate chain for the JavaScript classes backing each component. This allows us to use Babel and NPM modules for the JavaScript part (<a href="https://github.com/home-assistant/home-assistant-polymer#building-the-app">more info here</a>). This does however come with the downside of other JS based frameworks: the browser blocks any painting while the JavaScript is being parsed instead of upgrading the website incrementally. This, however, is something we take for granted right now and hope that module bundlers will be able to solve this for us eventually. Tree shaking is a very promising improvement in this space.</p>

<p>Most of this blog post has been comparing Polymer to React. In many ways Polymer is similar to React but it is not as far evolved yet. I like React but I do not see it as a technology that will be around forever. Given the trend of previous popular JS frameworks, React will probably get replaced by another framework that works even better. Web components however will be here forever as they are part of the HTML standard. And this gives us peace of mind at the virtual Home Assistant headquarters: we do not have to be afraid of having to rewrite our frontend just to stay relevant or because people don’t want to include another dependency just to run this legacy piece.</p>

<p>So there it is, the reason why we use Polymer.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video: How To Configure Home Assistant]]></title>
    <link href="https://home-assistant.io/blog/2016/05/12/video-configuring-home-assistant/"/>
    <updated>2016-05-12T00:09:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/12/video-configuring-home-assistant</id>
    <content type="html"><![CDATA[<p>Ben from <a href="http://www.bruhautomation.com">BRUH Automation</a> authors a lot of great video’s about how he is using Home Assistant and how you can get started with it too. The video below will walk you through how to configure Home Assistant. Enjoy!</p>

<p>Make sure to subscribe to <a href="https://www.youtube.com/channel/UCLecVrux63S6aYiErxdiy4w">his YouTube channel</a> for more Home Assistant video’s.</p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/hFDVB2H6TNo" frameborder="0" allowfullscreen=""></iframe>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0.19: Empowering scripts and Alexa]]></title>
    <link href="https://home-assistant.io/blog/2016/05/07/empowering-scripts-and-alexa/"/>
    <updated>2016-05-07T18:06:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/07/empowering-scripts-and-alexa</id>
    <content type="html"><![CDATA[<p>This release is big. Until now, our automations and scripts have been very static. Starting today it should all be a bit more dynamic.</p>

<p><strong>Scripts</strong> are now available in automations and when responding to Alexa/Amazon Echo. Both of these components will now expose data to be used in script templates (including <code>from_state</code> !). Passing data to script entities is available by passing the data to the script services.</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">automation</span>:
  <span class="key">trigger</span>:
    <span class="key">platform</span>: <span class="string"><span class="content">mqtt</span></span>
    <span class="key">topic</span>: <span class="string"><span class="content">some/notify/topic</span></span>
  <span class="key">action</span>:
    <span class="key">service</span>: <span class="string"><span class="content">notify.notify</span></span>
    <span class="key">data_template</span>:
      <span class="key">message</span>: 

<span class="key">automation 2</span>:
  <span class="key">trigger</span>:
    <span class="key">platform</span>: <span class="string"><span class="content">state</span></span>
    <span class="key">entity_id</span>: <span class="string"><span class="content">light.hue</span></span>
  <span class="key">action</span>:
    <span class="key">service</span>: <span class="string"><span class="content">notify.notify</span></span>
    <span class="key">data_template</span>:
      <span class="key">message</span>:  <span class="string"><span class="content">is now </span></span>
</pre></div>
</div>
</div>

<p><strong>Entity Namespaces</strong> allow you to influence the entity ids for a specific platform. For example you can turn <code>light.living_room</code> into <code>light.holiday_home_living_room</code> with the following config:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span class="key">light</span>:
  <span class="key">platform</span>: <span class="string"><span class="content">hue</span></span>
  <span class="key">entity_namespace</span>: <span class="string"><span class="content">holiday_home</span></span>
</pre></div>
</div>
</div>

<ul>
  <li>Automation: allow <a href="https://home-assistant.io/getting-started/scripts/">script syntax</a> for action (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Automation: expose <a href="https://home-assistant.io/getting-started/automation-templating/#available-trigger-data/"><code>trigger</code> variable</a> to script templates (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Script: allow passing variables for script templates in the <a href="https://home-assistant.io/components/script/#passing-parameters-in-service-calls/">script service calls</a> (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Alexa/Amazon Echo: allow <a href="https://home-assistant.io/getting-started/scripts/">script syntax</a> for action (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Alexa/Amazon Echo: <a href="https://home-assistant.io/components/alexa/#configuring-home-assistant/">expose intent variables</a> to script templates (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Script syntax: <a href="https://home-assistant.io/getting-started/scripts-conditions/">conditions now supported</a> to interrupt execution (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Automation: use <a href="https://home-assistant.io/getting-started/scripts-conditions/">new condition syntax</a> (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Script syntax: two new conditions <a href="https://home-assistant.io/getting-started/scripts-conditions/#and-condition/"><code>and</code></a> and <a href="https://home-assistant.io/getting-started/scripts-conditions/#or-condition/"><code>or</code></a> to combine conditions (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Any platform: Allow setting <a href="https://home-assistant.io/topics/platform_options/#entity-namespace/">entity namespace</a> to prefix entity_ids. (<a href="https://github.com/balloob/">@balloob</a>)</li>
  <li>Switch: <a href="https://home-assistant.io/components/switch.rpi_rf/">Raspberry Pi generic 433 Mhz GPIO adapters</a> now supported (<a href="https://github.com/milaq/">@milaq</a>)</li>
  <li>Z-Wave: use more sane defaults (<a href="https://github.com/danieljkemp/">@danieljkemp</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.snapcast/">Snapcast</a> now supports picking a source (<a href="https://github.com/happyleavesaoc/">@happyleavesaoc</a>)</li>
  <li>MySensors: major cleanup (<a href="https://github.com/MartinHjelmare/">@MartinHjelmare</a>)</li>
  <li>Binary Sensor: <a href="https://home-assistant.io/components/sensor.command_line/">Command line sensor</a> now supports classes (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
  <li>MQTT: <a href="https://home-assistant.io/components/mqtt/">allow client key authentication</a> (<a href="https://github.com/timharton/">@timharton</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.forecast/">Forecast.io</a> now supports minutely, hourly and daily summaries (<a href="https://github.com/aceat64/">@aceat64</a>)</li>
  <li>Media Player: <a href="https://home-assistant.io/components/media_player.pioneer/">Pioneer AVR</a> now supported (<a href="https://github.com/kylehendricks/">@kylehendricks</a>)</li>
  <li>Switch: <a href="https://home-assistant.io/components/switch.acer_projector/">Acer Projectors</a> now supported (<a href="https://github.com/deisi/">@deisi</a>)</li>
  <li>New <a href="https://home-assistant.io/components/hvac/">HVAC component</a> added with Z-Wave support (<a href="https://github.com/turbokongen/">@turbokongen</a>)</li>
  <li>Support added for <a href="https://home-assistant.io/components/octoprint/">OctoPrint</a> (<a href="https://github.com/w1ll1am23/">@w1ll1am23</a>)</li>
  <li>Configuration.yaml can now refer to environment variables using <code>!env_var</code> (<a href="https://github.com/bah2830/">@bah2830</a>)</li>
  <li>Lock: <a href="https://home-assistant.io/components/lock.zwave/">Z-Wave</a> now supported (<a href="https://github.com/devdelay/">@devdelay</a>)</li>
  <li>New <a href="https://home-assistant.io/components/dweet/">Dweet component</a> to export data (<a href="https://github.com/fabaff/">@fabaff</a>)</li>
  <li>Media Player now supports stop command + initial kodi support (<a href="https://github.com/hmronline/">@hmronline</a>)</li>
  <li>Zigbee: push updates now supported (<a href="https://github.com/flyte/">@flyte</a>)</li>
  <li>Wink devices with battery level will now show these (<a href="https://github.com/w1ll1am23/">@w1ll1am23</a>)</li>
  <li>Templates: new <a href="https://home-assistant.io/topics/templating/#home-assistant-template-extensions/"><code>as_timestamp</code></a> method now available (<a href="https://github.com/srcLurker/">@srcLurker</a>)</li>
  <li>API: Add [<code>/api/discovery_info</code>] with basic instance info (<a href="https://github.com/robbiet480/">@robbiet480</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.google_travel_time/">Google Maps travel time</a> added (<a href="https://github.com/Danielhiversen/">@Danielhiversen</a>)</li>
  <li>HTTP: Allow adding <a href="https://home-assistant.io/components/http/">CORS headers</a> (<a href="https://github.com/robbiet480/">@robbiet480</a>)</li>
  <li>Sensor: <a href="https://home-assistant.io/components/sensor.fitbit/">Fitbit</a> support added (<a href="https://github.com/robbiet480/">@robbiet480</a>)</li>
  <li>Bug fixes and tweaks by <a href="https://github.com/turbokongen/">@turbokongen</a>, <a href="https://github.com/danieljkemp/">@danieljkemp</a>, <a href="https://github.com/Danielhiversen/">@Danielhiversen</a>, <a href="https://github.com/TheRealLink/">@TheRealLink</a>, <a href="https://github.com/persandstrom/">@persandstrom</a>, <a href="https://github.com/sander76/">@sander76</a>, <a href="https://github.com/fabaff/">@fabaff</a>, <a href="https://github.com/ishults/">@ishults</a>, <a href="https://github.com/Bart274/">@Bart274</a>, <a href="https://github.com/robbiet480/">@robbiet480</a>, <a href="https://github.com/Cinntax/">@Cinntax</a>, <a href="https://github.com/blackdog70/">@blackdog70</a>, <a href="https://github.com/gwendalg/">@gwendalg</a>, <a href="https://github.com/JshWright/">@JshWright</a>, <a href="https://github.com/kylehendricks/">@kylehendricks</a>, <a href="https://github.com/bradsk88/">@bradsk88</a>, <a href="https://github.com/shaftoe/">@shaftoe</a>, <a href="https://github.com/molobrakos/">@molobrakos</a>, <a href="https://github.com/bah2830/">@bah2830</a>, <a href="https://github.com/nkgilley/">@nkgilley</a></li>
</ul>

<h3>Deprecations</h3>
<ul>
  <li>Conditions in automations should now specify which condition to use with <code>condition:</code> instead of <code>platform:</code>. For example <code>condition: state</code>.</li>
  <li>RFXtrx has a new config format.</li>
</ul>

<p>Old RFXtrx config format:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>  <span class="key">devices</span>:
    <span class="key">123efab1</span>:
      <span class="key">name</span>: <span class="string"><span class="content">My DI.0 light device</span></span>
      <span class="key">packetid</span>: <span class="string"><span class="content">1b2200000890efab1213f60</span></span>
</pre></div>
</div>
</div>

<p>New RFXtrx config format:</p>

<div class="highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre>  <span class="key">devices</span>:
    <span class="key">1b2200000890efab1213f60</span>:
      <span class="key">name</span>: <span class="string"><span class="content">My DI.0 light device</span></span>
</pre></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Talk: Automating your home with Home Assistant (OpenIoT Summit)]]></title>
    <link href="https://home-assistant.io/blog/2016/05/06/open-iot-summit-talk/"/>
    <updated>2016-05-06T14:09:00+00:00</updated>
    <id>https://home-assistant.io/blog/2016/05/06/open-iot-summit-talk</id>
    <content type="html"><![CDATA[<p>At the beginning of April I gave a talk about Home Assistant at the OpenIoT summit in San Diego. I talk about the Home Assistant architecture and explain how to get started integrating your devices. Big thanks to my employer AppFolio (<a href="http://www.appfolioinc.com/jobs-openings">we’re hiring!</a>) for letting me attend. <a href="https://docs.google.com/presentation/d/1P2WsmwGSSni4gAriY5IA0-m-FUGO1kno3gIkRYz20Kw/edit#slide=id.p">Slides.</a></p>

<div class="videoWrapper">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/4-6rTwKl6ww" frameborder="0" allowfullscreen=""></iframe>
</div>

]]></content>
  </entry>
  
</feed>

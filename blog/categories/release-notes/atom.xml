<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: release-notes | Home Assistant]]></title>
  <link href="https://home-assistant.io/blog/categories/release-notes/atom.xml" rel="self"/>
  <link href="https://home-assistant.io/"/>
  <updated>2015-09-13T10:36:51-07:00</updated>
  <id>https://home-assistant.io/</id>
  <author>
    <name><![CDATA[Paulus Schoutsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Home Assistant meets IFTTT]]></title>
    <link href="https://home-assistant.io/blog/2015/09/13/home-assistant-meets-ifttt/"/>
    <updated>2015-09-13T09:28:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/09/13/home-assistant-meets-ifttt</id>
    <content type="html"><![CDATA[<p>Today we announce the release of Home Assistant v0.7.2 which includes brand new support by
<a href="https://github.com/sfam">@sfam</a> to integrate with <a href="https://ifttt.com">IFTTT</a>. IFTTT stands for If This, Then That and is a
webservice that integrates with almost every possible webservice out there. Adding Home
Assistant to this mix means Home Assistant can connect with all via IFTTT.</p>

<p>It is now possible to disable your irregation system if it is going to be cloudy tomorrow or tweet
if your smoke alarm goes off.</p>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/splash.png'>
</p>


<p>Head over to the <a href="/components/ifttt.html">setup instructions</a> to get started with IFTTT. Click the
read more button for some example recipes.</p>

<!--more-->


<p>In each of the following examples, make sure to replace the XXX in the url with your correct
host address and api password.</p>

<h2><a class='title-link' name='turn-off-irregation-system-when-not-needed' href='#turn-off-irregation-system-when-not-needed'></a> Turn off irregation system when not needed </h2>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/recipe-weather.png' />
</p>


<p>Maker channel setup:</p>

<table>
<thead>
<tr>
<th> Field </th>
<th> Value </th>
</tr>
</thead>
<tbody>
<tr>
<td> URL   </td>
<td>  <a href="http://xxx.xxx.xxx.xxx:8123/api/services/switch/turn_off?api_password=xxxxxxxx">http://xxx.xxx.xxx.xxx:8123/api/services/switch/turn_off?api_password=xxxxxxxx</a></td>
</tr>
<tr>
<td> METHOD </td>
<td> POST</td>
</tr>
<tr>
<td> CONTENT TYPE </td>
<td> application/json</td>
</tr>
<tr>
<td> BODY </td>
<td> { &ldquo;entity_id&rdquo;: &ldquo;switch.irrigation&rdquo; }</td>
</tr>
</tbody>
</table>


<h2><a class='title-link' name='tweet-when-important-events-happen' href='#tweet-when-important-events-happen'></a> Tweet when important events happen </h2>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/recipe-twitter.png' />
</p>


<p>This will tweet a message when a MQTT message is received that the smoke alarm has been triggered.
Setup Maker channel with event name <code>HA_FIRE_ALARM</code> and Twitter channel to tweet the message in
<code>value1</code>.</p>

<pre><code class="yaml"># Configuration.yaml entry
automation:
  alias: Post a tweet when fire alarm is triggered

  platform: mqtt
  mqtt_topic: home/alarm/fire
  mqtt_payload: 'on'

  execute_service: ifttt.trigger
  service_data: {"event":"HA_FIRE_ALARM", "value1":"The fire alarm just triggered!"}
</code></pre>

<h2><a class='title-link' name='turn-on-lights-when-i-get-home' href='#turn-on-lights-when-i-get-home'></a> Turn on lights when I get home </h2>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/recipe-geo.png' />
</p>


<p>Maker channel setup:</p>

<table>
<thead>
<tr>
<th> Field </th>
<th> Value </th>
</tr>
</thead>
<tbody>
<tr>
<td> URL   </td>
<td>  <a href="http://xxx.xxx.xxx.xxx:8123/api/services/light/turn_on?api_password=xxxxxxxx">http://xxx.xxx.xxx.xxx:8123/api/services/light/turn_on?api_password=xxxxxxxx</a></td>
</tr>
<tr>
<td> METHOD </td>
<td> POST</td>
</tr>
<tr>
<td> CONTENT TYPE </td>
<td> application/json</td>
</tr>
<tr>
<td> BODY </td>
<td> { &ldquo;entity_id&rdquo;: &ldquo;light.kitchen&rdquo; }</td>
</tr>
</tbody>
</table>


<h2><a class='title-link' name='flash-lights-when-a-new-pr-comes-in-for-home-assistant' href='#flash-lights-when-a-new-pr-comes-in-for-home-assistant'></a> Flash lights when a new PR comes in for Home Assistant </h2>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/recipe-github.png' />
</p>


<p>Maker channel setup:</p>

<table>
<thead>
<tr>
<th> Field </th>
<th> Value </th>
</tr>
</thead>
<tbody>
<tr>
<td> URL   </td>
<td>  <a href="http://xxx.xxx.xxx.xxx:8123/api/services/light/turn_on?api_password=xxxxxxxx">http://xxx.xxx.xxx.xxx:8123/api/services/light/turn_on?api_password=xxxxxxxx</a></td>
</tr>
<tr>
<td> METHOD </td>
<td> POST</td>
</tr>
<tr>
<td> CONTENT TYPE </td>
<td> application/json</td>
</tr>
<tr>
<td> BODY </td>
<td> { &ldquo;entity_id&rdquo;: &ldquo;group.all_lights&rdquo;, &ldquo;flash&rdquo;:&ldquo;yes&rdquo; }</td>
</tr>
</tbody>
</table>


<h2><a class='title-link' name='fire-events-when-pressing-the-do-button' href='#fire-events-when-pressing-the-do-button'></a> Fire events when pressing the DO button </h2>

<p class='img'>
  <img src='https://home-assistant.io/images/blog/2015-09-ifttt/recipe-do.png' />
</p>


<p>Maker channel setup:</p>

<table>
<thead>
<tr>
<th> Field </th>
<th> Value </th>
</tr>
</thead>
<tbody>
<tr>
<td> URL   </td>
<td>  <a href="http://xxx.xxx.xxx.xxx:8123/api/events/do_button_pressed?api_password=xxxxxxxx">http://xxx.xxx.xxx.xxx:8123/api/events/do_button_pressed?api_password=xxxxxxxx</a></td>
</tr>
<tr>
<td> METHOD </td>
<td> POST</td>
</tr>
<tr>
<td> CONTENT TYPE </td>
<td> application/json</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Verisure devices and modern TP-Link routers now supported]]></title>
    <link href="https://home-assistant.io/blog/2015/08/17/verisure-and-modern-tp-link-router-support/"/>
    <updated>2015-08-17T20:00:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/08/17/verisure-and-modern-tp-link-router-support</id>
    <content type="html"><![CDATA[<p>A minor bug fix release to fix some issues that have come up since the last release. Please upgrade as soon as possible by running <code>git pull</code> from the Home Assistant directory.</p>

<p>This release is a major milestone in our test coverage as we&rsquo;ve crossed into the 80s! It has to be noted that this covers mainly the core and automation components. Platforms that communicate with IoT devices have been excluded.</p>

<p>As we didn&rsquo;t want to just push out bug fixes, this release includes a few additions:</p>

<ul>
<li>Support for modern TP-Link routers like the ArcherC9 line has been contributed by <a href="https://github.com/chrisvis">@chrisvis</a>.</li>
<li>Improved support for MQTT topic subscriptions has been contributed by <a href="https://github.com/qrtn">@qrtn</a></li>
</ul>


<p><strong>Verisure Support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/verisure.png' style='border:none; box-shadow: none; float: right;' height='50' />
Home Assistant support to integrate your <a href="https://www.verisure.com/">Verisure</a> alarms, hygrometers, sensors and thermometers has been contributed by <a href="https://github.com/persandstrom">@persandstrom</a>.</p>

<pre><code class="yaml"># Example configuration.yaml entry
verisure:
  username: user@example.com
  password: password
  alarm: 1
  hygrometers: 0
  smartplugs: 1
  thermometers: 0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MQTT, Rasperry PI, Logitech Squeezebox and ASUSWRT routers now supported]]></title>
    <link href="https://home-assistant.io/blog/2015/08/09/mqtt-raspberry-pi-squeezebox-asuswrt-support/"/>
    <updated>2015-08-09T18:01:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/08/09/mqtt-raspberry-pi-squeezebox-asuswrt-support</id>
    <content type="html"><![CDATA[<p>It&rsquo;s time for the August release and there is some serious good stuff this time. The core of Home Assistant has gone some serious clean up and a bump in test coverage thanks to <a href="https://github.com/balloob">@balloob</a>. If you&rsquo;re a developer, make sure you read up on <a href="https://github.com/balloob/home-assistant/pull/251">the deprecation notices</a>. <a href="https://github.com/fabaff">@fabaff</a> did another great round of documentating all the various components.</p>

<p><strong>MQTT Support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/mqtt.png' style='border:none; box-shadow: none; float: right;' height='50' />
The big new addition in this release is the support for the MQTT protocol by <a href="https://github.com/fabaff">@fabaff</a> with some help from <a href="https://github.com/balloob">@balloob</a>. It will now be possible to integrate any IoT device that talks via MQTT. For the initial release we support connecting Home Assistant to a broker (no TLS yet). Components can now subscribe and publish to MQTT topics (<a href="https://github.com/balloob/home-assistant/blob/dev/config/custom_components/mqtt_example.py">see the example</a>) and also support for the automation component <a href="/components/automation.html#mqtt-based-automation">has been added</a>. For more information, see <a href="/components/mqtt.html">the MQTT component page</a>.</p>

<pre><code class="yaml"># Example configuration.yaml entry
mqtt:
  broker: IP_ADDRESS_BROKER
  # All the other options are optional:
  port: 1883
  keepalive: 60
  qos: 0
  username: your_username
  password: your_secret_password
</code></pre>

<!--more-->


<p><strong>Raspberry PI GPIO Support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/raspberry-pi.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/gbarba">@gbarba</a> has contributed support to use the general purpose input and output pins on a Raspberry PI as switches inside Home Assistant.</p>

<pre><code># Example configuration.yaml entry
switch:
  platform: rpi_gpio
  ports:
    11: Fan Office
    12: Light Desk
</code></pre>

<p><strong>ASUSWRT based routers</strong><br>
<img src='https://home-assistant.io/images/supported_brands/asus.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/persandstrom">@persandstrom</a> has contributed support to do prescence detection using ASUSWRT based routers.</p>

<pre><code class="yaml"># Example configuration.yaml entry
device_tracker:
  platform: asuswrt
  host: YOUR_ROUTER_IP
  username: YOUR_ADMIN_USERNAME
  password: YOUR_ADMIN_PASSWORD
</code></pre>

<p><strong>Logitech Squeezebox media player support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/logitech.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/persandstrom">@persandstrom</a> also contributed support for the Logitech Squeezebox media player. This allows you to control your Logitech Squeezebox from Home Assistant.</p>

<pre><code># Example configuration.yaml entry
media_player:
  platform: squeezebox
  host: 192.168.1.21
  port: 9090
  username: user
  password: password
</code></pre>

<p><strong>Slack notification support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/slack.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/jamespcole">@jamespcole</a> has contributed a Slack platform for the notification platform. This allows you to deliver messages to any channel.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
  platform: slack
  api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
  default_channel: '#general'
</code></pre>

<p><strong>Edimax Smart Switches support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/edimax.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/rkabadi">@rkabadi</a> has contributed support for integrating Edimax Smart Switches into Home Assistant.</p>

<pre><code># Example configuration.yaml entry
switch:
  platform: edimax
  host: 192.168.1.32
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
  name: Edimax Smart Plug
</code></pre>

<p><strong>RFXtrx sensor support</strong><br>
<a href="https://github.com/danielhiversen">@danielhiversen</a> has contributed support for RFXtrx sensors. It supports sensors that communicate in the frequency range of 433.92 MHz.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  - platform: rfxtrx
    device: PATH_TO_DEVICE
</code></pre>

<p>The path to your device, e.g. <code>/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1Y0NJGR-if00-port0</code></p>

<p><strong>TEMPer temperature sensor support</strong><br>
Support for Temper temperature sensors has been contributed by <a href="https://github.com/rkabadi">@rkabadi</a>.</p>

<pre><code># Example configuration.yaml entry
sensor:
  platform: temper
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IP Cameras, Arduinos, Kodi and Efergy Energy Monitors now supported]]></title>
    <link href="https://home-assistant.io/blog/2015/07/11/ip-cameras-arduino-kodi-efergy-support/"/>
    <updated>2015-07-11T01:37:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/07/11/ip-cameras-arduino-kodi-efergy-support</id>
    <content type="html"><![CDATA[<p>Another month has passed and some great new features have landed in Home Assistant. This month release has been made possible by <a href="https://github.com/balloob">balloob</a>, <a href="https://github.com/ettisan">ettisan</a>, <a href="https://github.com/fabaff">fabaff</a>, <a href="https://github.com/gyran">gyran</a>, <a href="https://github.com/jamespcole">jamespcole</a>, <a href="https://github.com/michaelarnauts">michaelarnauts</a>, <a href="https://github.com/miniconfig">miniconfig</a> and <a href="https://github.com/rmkraus">rmkraus</a>.</p>

<p>This release includes some architectural changes by me. The first is that the frontend is now based on a <a href="http://optimizely.github.io/nuclear-js/">NuclearJS</a> JavaScript backend. This has greatly helped to organize and optimize the frontend code. Another change is that Home Assistant will now install dependencies on-demand instead of installing dependencies for all supported devices.</p>

<p><strong>IP Camera Support</strong><br>
James has worked very hard to add support for IP cameras to Home Assistant which is included in this release. The initial release focusses on providing generic IP camera support. This means that any webcam that can exposes a JPEG image via a url can be integrated.</p>

<p>Home Assistant will route the requests to your camera via the server allowing you to expose IP camera&rsquo;s inside your network via the Home Assistant app.</p>

<pre><code class="yaml"># Example configuration.yaml entry
camera:
  platform: generic
  name: my sample camera
  username: MY_USERNAME
  password: MY_PASSWORD
  still_image_url: http://194.218.96.92/jpg/image.jpg
</code></pre>

<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>




<!--more-->


<p><strong>Arduino</strong><br>
<img src='https://home-assistant.io/images/supported_brands/arduino.png' style='border:none; box-shadow: none; float: right;' height='50' />
Fabian has contributed support for interfacing with Arduinos. This makes it possible to connect your Arduino via USB and expose pins as sensor data and write to pins via switches. Have a look at <a href="/components/arduino.html">the docs</a> for an extensive guide to get started.</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: arduino
  pins:
    11:
      name: Fan Office
      type: digital
    12:
      name: Light Desk
      type: digital

sensor:
  platform: arduino
  pins:
    1:
      name: Door switch
      type: analog
    0:
      name: Brightness
      type: analog
</code></pre>

<p><strong>Kodi (XBMC)</strong><br>
<img src='https://home-assistant.io/images/supported_brands/kodi.png' style='border:none; box-shadow: none; float: right;' height='50' />
Ettisan has contributed a Kodi (XBMC) platform for the media player component. This allows you to track all the media that you are playing and allow you to control it.</p>

<pre><code># Example configuration.yaml entry
media_player:
  platform: kodi
  name: Kodi
  url: http://192.168.0.123/jsonrpc
  user: kodi
  password: my_secure_password
</code></pre>

<p><strong>TP-Link</strong><br>
<img src='https://home-assistant.io/images/supported_brands/tp-link.png' style='border:none; box-shadow: none; float: right;' width='150' />
Michael has added TP-Link support to the device tracker. This allows you to now detect presence if you have a TP-Link router.</p>

<pre><code class="yaml"># Example configuration.yaml entry
device_tracker:
  platform: tplink
  host: YOUR_ROUTER_IP
  username: YOUR_ADMIN_USERNAME
  password: YOUR_ADMIN_PASSWORD
</code></pre>

<p><strong>Efergy energy monitor</strong><br>
<img src='https://home-assistant.io/images/supported_brands/efergy.png' style='border:none; box-shadow: none; float: right;' height='50' />
Miniconfig has contributed support for the <a href="https://efergy.com">Efergy energy meters</a>. To get an app token, log in to your efergy account, go to the Settings page, click on App tokens, and click &ldquo;Add token&rdquo;.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: efergy
  app_token: APP_TOKEN
  utc_offset: UTC_OFFSET
  monitored_variables:
    - type: instant_readings
    - type: budget
    - type: cost
      period: day
      currency: $
</code></pre>

<p><strong>Forecast.io</strong><br>
Fabian has added support for <a href="https://forecast.io/">Forecast.io</a> to get weather forecasts for Home Assistant. You need an API key which is free but requires a <a href="https://developer.forecast.io/register">registration</a>. To add Forecast.io to your installation, add the following to your <code>configuration.yaml</code> file:</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: forecast
  api_key: YOUR_APP_KEY
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for June 10, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/06/10/release-notes/"/>
    <updated>2015-06-10T18:54:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/06/10/release-notes</id>
    <content type="html"><![CDATA[<p>Wow, almost a month has gone by since the last release and this release is <em>packed</em>. The biggest part of this release is probably one that you won&rsquo;t notice: the frontend has been upgraded from Polymer 0.5 to the brand new released Polymer 1.0. Polymer has been declared stable by the Google overlords which will allow us to expand functionality that was waiting for this moment to arrive.</p>

<p>This release sets a record for the amount of people involved: 8! <a href="https://github.com/Andythigpen">Andythigpen</a>, <a href="https://github.com/Jamespcole">Jamespcole</a>, <a href="https://github.com/Azelphur">Azelphur</a>, <a href="https://github.com/Fabaff">Fabaff</a>, <a href="https://github.com/Dutchy-">Dutchy-</a>, <a href="https://github.com/Fbradyirl">Fbradyirl</a>, <a href="https://github.com/wind-rider">wind-rider</a> and <a href="https://github.com/ettisan">ettisan</a>, thanks a lot for your contributions!</p>

<p>A big improvement has been brought this release by wind-rider. He took the time to revive the Chromecast support and started improving the media player integration. This triggered other people to join in resulting in a revamped media player experience and support for the Music Player Daemon.</p>

<p class='img'>
  <img src='https://home-assistant.io/images/screenshots/media_player-card.png' />
  Example of the new media player cards
</p>




<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>




<!--more-->


<p>Before jumping into the newly supported platforms, here are the other improvements that are landing this release:</p>

<ul>
<li>Fronted upgraded to Polymer 1.0 by @balloob</li>
<li>Include other YAML files using the <code>!include</code> keyword by @andythigpen</li>
<li>Switch support and bug fixes for Vera platform by @jamespcole</li>
<li>HTTP session support for the HTTP component by @jamespcole</li>
<li>Device tracker bugfixes by @Dutchy-</li>
<li>Bugfix for device tracker platform by @fbradyirl</li>
<li>Fixing Chromecast support by @wind-rider</li>
<li>Media player improvements by @balloob and @wind-rider</li>
<li>Nest thermostat bugfixes by @balloob</li>
<li>Fix the device tracker getting in a deadlock by @balloob</li>
<li>Update documentation by @fabaff</li>
</ul>


<p><strong>Music Player Daemon</strong><br>
<img src='https://home-assistant.io/images/supported_brands/mpd.png' style='border:none; box-shadow: none; float: right;' height='50' />
Fabaff has contributed MusicPlayerDaemon support. The mpd platform allows you to control a <a href="http://www.musicpd.org/">Music Player Daemon</a> from Home Assistant. Right now, only playback is supported and not playlist manipulation.</p>

<pre><code class="yaml"># Example configuration.yaml entry
media_player:
  platform: mpd
  server: 127.0.0.1
  port: 6600
  location: bedroom
</code></pre>

<p><strong>Command line switch</strong><br>
A switch platform that issues specific commands when it is turned on and off. This might very well become our most popular platform as it allows anyone to integrate any type of switch into Home Assistant that can be controlled from the command line, including calling other scripts!</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: command_switch
  switches:
    - kitchen_light:
        oncmd: switch_command on kitchen
        offcmd: switch_command off kitchen
</code></pre>

<p><strong>LimitlessLED</strong><br>
This new platform can control your LimitlessLED lights from within Home Assistant. The lights are also known as EasyBulb, AppLight, AppLamp, MiLight, LEDme, dekolight or iLight.</p>

<pre><code class="yaml"># Example configuration.yaml entry
light:
  platform: limitlessled
  host: 192.168.1.10
  group_1_name: Living Room
  group_2_name: Bedroom
  group_3_name: Office
  group_4_name: Kitchen
</code></pre>

<p><strong>Bitcoin sensor</strong><br>
<img src='https://home-assistant.io/images/supported_brands/bitcoin.png' style='border:none; box-shadow: none; float: right;' height='50' />
The bitcoin platform displays various details about the <a href="https://bitcoin.org">Bitcoin</a> network. If you have an online wallet from <a href="https://blockchain.info/">Blockchain.info</a> the sensor is capable to show your current balance.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: bitcoin
  wallet: 'YOUR WALLET_ID'
  password: YOUR_ACCOUNT_PASSWORD
  currency: YOUR CURRENCY
  display_options:
    - exchangerate
    - trade_volume_btc
    - miners_revenue_usd
    - btc_mined
    - trade_volume_usd
    - difficulty
    - minutes_between_blocks
    - number_of_transactions
    - hash_rate
    - timestamp
    - mined_blocks
    - blocks_size
    - total_fees_btc
    - total_btc_sent
    - estimated_btc_sent
    - total_btc
    - total_blocks
    - next_retarget
    - estimated_transaction_volume_usd
    - miners_revenue_btc
    - market_price_usd
</code></pre>

<p><strong>SMTP notificatoin platform</strong><br>
<img src='https://home-assistant.io/images/supported_brands/smtp.png' style='border:none; box-shadow: none; float: right;' height='50' />
The smtp platform allows you to deliver notifications from Home Assistant to an e-mail recipient.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
  platform: mail
  server: MAIL_SERVER
  port: YOUR_SMTP_PORT
  sender: SENDER_EMAIL_ADDRESS
  starttls: 1 or 0
  username: YOUR_SMTP_USERNAME
  password: YOUR_SMTP_PASSWORD
  recipient: YOUR_RECIPIENT
</code></pre>

<p><strong>Syslog notification platform</strong><br>
The syslog platform allows you to deliver notifications from Home Assistant to the local syslog.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
  platform: syslog
</code></pre>

<p><strong>Swiss Public transport sensor</strong><br>
The swiss public transport sensor will give you the next two departure times from a given location to another one in Switzerland. See the <a href="/components/sensor.swiss_public_transport.html">component page</a> for more information how to set it up.</p>

<p><strong>Transmission turtle mode switch</strong><br>
<img src='https://home-assistant.io/images/supported_brands/transmission.png' style='border:none; box-shadow: none; float: right;' height='50' />
The transmission platform allows you to control your <a href="http://www.transmissionbt.com/">Transmission</a> client from within Home Assistant. The platform enables you switch to your &lsquo;Alternative Speed Limits&rsquo; (aka &lsquo;Turtle mode&rsquo;) setting.</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: transmission
  name: Transmission
  host: 192.168.1.26
  port: 9091
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
</code></pre>

<p><strong>Hikvision camera motion detection support</strong><br>
This switch platform allows you to control your motion detection setting on your Hikvision camera.</p>

<pre><code># Example configuration.yaml entry
switch:
    platform: hikvisioncam
    name: Hikvision Cam 1 Motion Detection
    host: 192.168.1.26
    username: YOUR_USERNAME
    password: YOUR_PASSWORD
</code></pre>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: release-notes | Home Assistant]]></title>
  <link href="https://home-assistant.io/blog/categories/release-notes/atom.xml" rel="self"/>
  <link href="https://home-assistant.io/"/>
  <updated>2015-05-31T00:21:34-07:00</updated>
  <id>https://home-assistant.io/</id>
  <author>
    <name><![CDATA[Paulus Schoutsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Release notes for May 14, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/05/14/release-notes/"/>
    <updated>2015-05-14T22:25:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/05/14/release-notes</id>
    <content type="html"><![CDATA[<p>Almost three busy weeks have past since the last release. We used this time to finally make the overhaul to use UTC as the internal date time format. We added a bunch of test coverage in the process to make sure the transition went smoothly. Pleas see <a href="/blog/2015/05/09/utc-time-zone-awareness/#backwards-incompatible-stuff">the blog post about the UTC refactor</a> for backwards incompatible changes.</p>

<p>This release includes a significant startup boost for the frontend and a fix for Wemo discovery after their latest firmware upgrade.</p>

<p>I would like to give a big shout out to our newest contributor <a href="https://github.com/fabaff">fabaff</a> for taking the time to improve the documentation.</p>

<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>


<p><strong>Overwriting Entity Attributes</strong><br>
Before diving into the newly supported devices and services, I want to highlight an awesome configuration enhancement by <a href="https://github.com/rmkraus">rmkraus</a>: overwriting entity attributes.</p>

<p>These new configuration settings allow you to overwrite entity state attributes. The main usage for this is being able to overwrite attributes that influence how an entity is shown in the interface.</p>

<pre><code class="yaml"># Example configuration.yaml entry
homeassistant:
  customize:
    light.bowl:
      # hides this entity from the interface
      hidden: true
    light.ceiling:
      # Replaces the state badge with given picture
      entity_picture: http://graph.facebook.com/schoutsen/picture
</code></pre>

<p><strong>MySensors</strong><br>
<img src='https://home-assistant.io/images/supported_brands/mysensors.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/andythigpen">Andythigpen</a> and <a href="https://github.com/theolind">Theolind</a> have added support for the <a href="http://www.mysensors.org">MySensors platform</a> to Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: mysensors
  port: /dev/ttyACM0
</code></pre>

<p><strong>OpenWeatherMap</strong><br>
<img src='https://home-assistant.io/images/supported_brands/openweathermap.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="http://openweathermap.org">OpenWeatherMap</a>. This will allow you to integrate local meteorological data into Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: openweathermap
  api_key: YOUR_API_KEY
  monitored_variables:
    - type: 'weather'
    - type: 'temperature'
    - type: 'wind_speed'
    - type: 'humidity'
    - type: 'pressure'
    - type: 'clouds'
    - type: 'rain'
    - type: 'snow'
</code></pre>

<p><strong>InstaPush</strong><br>
<img src='https://home-assistant.io/images/supported_brands/instapush.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="https://instapush.im">InstaPush</a>. This will allow you send messages from Home Assistant to your iOS and Android devices.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: instapush
    # Get those by creating a new application, event, and tracker on https://instapush.im
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
    app_secret: ABCDEFGHJKLMNOPQRSTUVXYZ
    event: ABCDEFGHJKLMNOPQRSTUVXYZ
    tracker: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>

<p><strong>XMPP</strong><br>
<img src='https://home-assistant.io/images/supported_brands/xmpp.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for Jabber/XMPP. This will allow you send messages from Home Assistant to anyone on Jabber/XMPP.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: xmpp
    sender: YOUR_JID
    password: YOUR_JABBER_ACCOUNT_PASSWORD
    recipient: YOUR_RECIPIENT
</code></pre>

<p><strong>Notify My Android</strong><br>
<img src='https://home-assistant.io/images/supported_brands/nma.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="http://www.notifymyandroid.com/">Notify My Android</a>. This will allow you to send messages from Home Assistant to your Android device.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: nma
    # Get this by registering a new application on http://www.notifymyandroid.com/
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>

<p><strong>Time &amp; Date sensor</strong><br>
<a href="https://github.com/fabaff">Fabaff</a> has contributed a time &amp; date sensor. This will allow you to show the current time/date on the dashboard.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: time_date
  monitored_variables:
    - type: 'time'
    - type: 'date'
    - type: 'date_time'
    - type: 'time_date'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for April 25, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/04/25/release-notes/"/>
    <updated>2015-04-25T06:57:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/04/25/release-notes</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a month since the latest update and a lot has happened again. Here a quick overview of the new things.</p>

<p><strong>Line Charts</strong><br>
<a href="https://github.com/jamespcole">James</a> has upgraded the history in the frontend to support line graphs. Line graphs will be shown for any entity that has a unit of measurement. The line graphs will also be shown in the more info card of an entity. <a href="/demo/">See the demo for a live example.</a></p>

<p class='img'>
<img src='https://home-assistant.io/images/screenshots/history-line-graphs.png'>
</p>


<p><strong>ISY994 hub support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/universal_devices.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/rmkraus">Ryan</a> has contributed support to integrate the ISY994 hub by Universal Devices. This allows you to integrate your X10/Insteon sensors, switches and lights.</p>

<p>He has created an extensive getting started guide which can be found on <a href="/components/isy994.html">the ISY994 component page</a>.</p>

<pre><code class="yaml"># Example configuration.yaml entry
isy994:
</code></pre>

<p><strong>Logbook</strong><br>
<img src='https://home-assistant.io/images/screenshots/logbook.png' style='margin-left:10px; float: right;' height="100" />
I (Paulus) have added a logbook component. The logbook component provides a different perspective on the history of your house by showing all the changes that happened to your house in chronological order. <a href="/demo/">See the demo for a live example.</a>
<span class='clearfix'></span></p>

<pre><code class="yaml"># Example configuration.yaml entry
logbook:
</code></pre>

<p><strong>Transmission support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/transmission.png' style='border:none; box-shadow: none; float: right;' height='50' />
James has also contributed support for integrating Transmission into Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: transmission
  name: Transmission
  host: 192.168.1.26
  port: 9091
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
  monitored_variables:
    - type: 'current_status'
    - type: 'download_speed'
    - type: 'upload_speed'
</code></pre>

<p><strong>Modbus support</strong><br>
<a href="https://github.com/kixam">Kixam</a> has contributed support for modbus, a serial communication protocol to control PLCs. It currently supports sensors and switches which can be controlled over serial, TCP and UDP connections.</p>

<pre><code class="yaml"># Example configuration.yaml entry
modbus:
  type: serial
  method: rtu
  port: /dev/ttyUSB0
  baudrate: 9600
  stopbits: 1
  bytesize: 8
  parity: N

sensor:
  platform: modbus
  slave: 1
  registers:
    16:
      name: My integer sensor
        unit: C
    24:
      bits:
        0:
          name: My boolean sensor
        2:
          name: My other boolean sensor

switch:
  platform: modbus
  slave: 1
  registers:
    24:
      bits:
        0:
          name: My switch
        2:
          name: My other switch
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for March 22, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/03/22/release-notes/"/>
    <updated>2015-03-22T00:21:00-08:00</updated>
    <id>https://home-assistant.io/blog/2015/03/22/release-notes</id>
    <content type="html"><![CDATA[<p>A new version of Home Assistant has just been pushed out. It contains bugfixes contributed by <a href="https://github.com/jamespcole">jamespcole</a>, <a href="https://github.com/andythigpen">andythigpen</a>, <a href="https://github.com/trainman419">trainman419</a> and <a href="https://github.com/balloob">me</a>. It also adds a bunch of great new features:</p>

<p><strong>Script</strong><br>
Andythigpen has contributed a script component. This allows users to create a sequence of service calls and delays. Scripts can be started using the service <code>script/turn_on</code> and interrupted using the service <code>script/turn_off</code>. A separate page has been added to the frontend to see the status of your scripts.</p>

<pre><code class="yaml"># Example configuration.yaml entry
script:
  # Turns on the bedroom lights and then the living room lights 1 minute later
  wakeup:
    alias: Wake Up
    sequence:
      - alias: Bedroom lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.bedroom
      - delay:
          # supports seconds, milliseconds, minutes, hours, etc.
          minutes: 1
      - alias: Living room lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.living_room
</code></pre>

<p><strong>Scene</strong><br>
I (Paulus) have contributed a scene component. A user can create scenes that capture the states you want certain entities to be. For example a scene can contain that light A should be turned on and light B should be bright red. Deactivating a scene will restore the previous state from before the scene was activated. Just like scripts, scenes have their own separate page to see which scenes are on.</p>

<pre><code class="yaml"># Example configuration.yaml entry
scene:
  - name: Romantic
    entities:
      light.tv_back_light: on
      light.ceiling:
        state: on
        color: [0.33, 0.66]
        brightness: 200
</code></pre>

<p><a name='sabnzbd'></a>
<strong>SABnzbd</strong><br>
<img src='https://home-assistant.io/images/supported_brands/sabnzbd.png' style='border:none; box-shadow: none; float: right;' height='50' />
James Cole has contributed support to integrate SABnzbd. This will allow you to monitor your downloads from within Home Assistant and setup automation based on the information.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  - platform: sabnzbd
    name: SAB
    api_key: YOUR_API_KEY
    # Example: http://192.168.1.32:8124/
    base_url: YOUR_SABNZBD_BASE_URL
    monitored_variables:
        - type: 'current_status'
        - type: 'speed'
        - type: 'queue_size'
        - type: 'queue_remaining'
        - type: 'disk_size'
        - type: 'disk_free'
</code></pre>

<p><a name='pushover'></a>
<strong>PushOver</strong><br>
<img src='https://home-assistant.io/images/supported_brands/pushover.png' style='border:none; box-shadow: none; float: right;' height='50' />
James Cole has also contributed support for <a href='https://pushover.net/'>the PushOver service</a> as a platform for the notify component. This allows components to send messages to the user using PushOver.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: pushover
    # Get this by registering a new application on https://pushover.net
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
    # Get this by logging into your account on https://pushover.net
    user_key: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for March 11, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/03/11/release-notes/"/>
    <updated>2015-03-11T18:36:00-08:00</updated>
    <id>https://home-assistant.io/blog/2015/03/11/release-notes</id>
    <content type="html"><![CDATA[<p>It has only been a little over a week since Theodor introduced YAML support for Home Assistant but so much has already happened that it is time for a summary of recent changes. Before mentioning the highlights I want to thank <a href="https://github.com/andythigpen">andythigpen</a>, <a href="https://github.com/jamespcole">jamespcole</a> and <a href="https://github.com/theolind">theolind</a> for numerous bug fixes, enhancements and new contributions. Thanks!</p>

<p><strong>Monitor local resources.</strong><br>
Theodor has contributed a new sensor platform to allow you to monitor disk usage, memory usage, CPU usage and running processes. This platform has superseded the process component which is now considered deprecated.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_free
      - type: process
        arg: kodi
</code></pre>

<p><strong>Experimental Z-Wave support</strong><br>
There is now experimental support for connecting Z-Wave networks using a Z-Wave USB stick. Right now it only integrates Z-Wave sensors into Home Assistant. Our goal is to get this tested by more people before adding support for other Z-Wave devices.</p>

<p>The new component is built on top of <a href="https://code.google.com/p/python-openzwave/">python-openzwave</a>. This package is currently not distributed on PyPi so we&rsquo;ve added a script <code>scripts/build_python_openzwave</code> to install it on your machine. Alternatively you can use the Docker image which is ready to go.</p>

<p>The development was done using an AEON Z-Wave USB stick and an AEON Z-Wave MultiSensor.</p>

<pre><code class="yaml"># Example configuration.yaml entry
zwave:
  usb_path: /dev/ttyUSB0
</code></pre>

<p><strong>Voice control</strong><br>
An initial version of voice control for Home Assistant has landed. The current implementation consists of two parts.</p>

<p>The first part is a component called <code>conversation</code> that exposes the service <code>conversation/process</code>. This service is capable of processing text and translating them into commands for devices. For now it will only support commands in the format of <code>Turn &lt;Friendly Name&gt; &lt;on/off&gt;</code>.</p>

<p>The second part is an upgrade to the frontend to use the speech-to-text in Chrome to allow users to speak commands. If you&rsquo;re using Chrome, you can test this out in <a href="/demo/">the demo</a>.</p>

<pre><code class="yaml"># Example configuration.yaml entry
conversation:
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for January 24, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/01/24/release-notes/"/>
    <updated>2015-01-24T18:36:00-08:00</updated>
    <id>https://home-assistant.io/blog/2015/01/24/release-notes</id>
    <content type="html"><![CDATA[<p>I have just merged the latest version of the development branch into master. Here are some of the highlights of this release:</p>

<p><strong>Configuration via the frontend</strong><br>
Phliips Hue will now be auto discovered and uses the new <code>configurator</code> component to interact with the user to finish the setup process.</p>

<p><strong>Wink Hub support</strong><br>
Thanks to the work done by John McLaughlin and Geoff Norton we now support the lights, switches and sensors that are connected to the Wink hub.</p>

<p><strong>The getting started guide and component page have been reorganized</strong><br>
The getting started instructions have been split into separate pages per component and a general overview page. The goal is to have a page per component that describes:</p>

<ul>
<li>What it does</li>
<li>How to set it up</li>
<li>Which states it maintains</li>
<li>Which services it provides</li>
<li>Additional development tips</li>
</ul>


<p><strong>More reasonable errors</strong><br>
Home Assistant should now throw better errors and offer solutions if you do not have the right version of Python 3, forgot to clone the git submodules or install the dependencies.</p>

<p><strong>Streamlined first launch</strong><br>
Home Assistant now supports <code>--open-ui</code> and <code>--demo-mode</code> command line properties to open the browser automatically and have something to show. Home Assistant now supports to be run without a password, allowing the interface to login automatically on launch.</p>
]]></content>
  </entry>
  
</feed>

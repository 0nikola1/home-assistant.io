<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: release-notes | Home Assistant]]></title>
  <link href="https://home-assistant.io/blog/categories/release-notes/atom.xml" rel="self"/>
  <link href="https://home-assistant.io/"/>
  <updated>2015-08-05T16:49:05-07:00</updated>
  <id>https://home-assistant.io/</id>
  <author>
    <name><![CDATA[Paulus Schoutsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IP Cameras, Arduinos, Kodi and Efergy Energy Monitors now supported]]></title>
    <link href="https://home-assistant.io/blog/2015/07/11/ip-cameras-arduino-kodi-efergy-support/"/>
    <updated>2015-07-11T01:37:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/07/11/ip-cameras-arduino-kodi-efergy-support</id>
    <content type="html"><![CDATA[<p>Another month has passed and some great new features have landed in Home Assistant. This month release has been made possible by <a href="https://github.com/balloob">balloob</a>, <a href="https://github.com/ettisan">ettisan</a>, <a href="https://github.com/fabaff">fabaff</a>, <a href="https://github.com/gyran">gyran</a>, <a href="https://github.com/jamespcole">jamespcole</a>, <a href="https://github.com/michaelarnauts">michaelarnauts</a>, <a href="https://github.com/miniconfig">miniconfig</a> and <a href="https://github.com/rmkraus">rmkraus</a>.</p>

<p>This release includes some architectural changes by me. The first is that the frontend is now based on a <a href="http://optimizely.github.io/nuclear-js/">NuclearJS</a> JavaScript backend. This has greatly helped to organize and optimize the frontend code. Another change is that Home Assistant will now install dependencies on-demand instead of installing dependencies for all supported devices.</p>

<p><strong>IP Camera Support</strong><br>
James has worked very hard to add support for IP cameras to Home Assistant which is included in this release. The initial release focusses on providing generic IP camera support. This means that any webcam that can exposes a JPEG image via a url can be integrated.</p>

<p>Home Assistant will route the requests to your camera via the server allowing you to expose IP camera&rsquo;s inside your network via the Home Assistant app.</p>

<pre><code class="yaml"># Example configuration.yaml entry
camera:
  platform: generic
  name: my sample camera
  username: MY_USERNAME
  password: MY_PASSWORD
  still_image_url: http://194.218.96.92/jpg/image.jpg
</code></pre>

<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>




<!--more-->


<p><strong>Arduino</strong><br>
<img src='https://home-assistant.io/images/supported_brands/arduino.png' style='border:none; box-shadow: none; float: right;' height='50' />
Fabian has contributed support for interfacing with Arduinos. This makes it possible to connect your Arduino via USB and expose pins as sensor data and write to pins via switches. Have a look at <a href="/components/arduino.html">the docs</a> for an extensive guide to get started.</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: arduino
  pins:
    11:
      name: Fan Office
      type: digital
    12:
      name: Light Desk
      type: digital

sensor:
  platform: arduino
  pins:
    1:
      name: Door switch
      type: analog
    0:
      name: Brightness
      type: analog
</code></pre>

<p><strong>Kodi (XBMC)</strong><br>
<img src='https://home-assistant.io/images/supported_brands/kodi.png' style='border:none; box-shadow: none; float: right;' height='50' />
Ettisan has contributed a Kodi (XBMC) platform for the media player component. This allows you to track all the media that you are playing and allow you to control it.</p>

<pre><code># Example configuration.yaml entry
media_player:
  platform: kodi
  name: Kodi
  url: http://192.168.0.123/jsonrpc
  user: kodi
  password: my_secure_password
</code></pre>

<p><strong>TP-Link</strong><br>
<img src='https://home-assistant.io/images/supported_brands/tp-link.png' style='border:none; box-shadow: none; float: right;' width='150' />
Michael has added TP-Link support to the device tracker. This allows you to now detect presence if you have a TP-Link router.</p>

<pre><code class="yaml"># Example configuration.yaml entry
device_tracker:
  platform: tplink
  host: YOUR_ROUTER_IP
  username: YOUR_ADMIN_USERNAME
  password: YOUR_ADMIN_PASSWORD
</code></pre>

<p><strong>Efergy energy monitor</strong><br>
<img src='https://home-assistant.io/images/supported_brands/efergy.png' style='border:none; box-shadow: none; float: right;' height='50' />
Miniconfig has contributed support for the <a href="https://efergy.com">Efergy energy meters</a>. To get an app token, log in to your efergy account, go to the Settings page, click on App tokens, and click &ldquo;Add token&rdquo;.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: efergy
  app_token: APP_TOKEN
  utc_offset: UTC_OFFSET
  monitored_variables:
    - type: instant_readings
    - type: budget
    - type: cost
      period: day
      currency: $
</code></pre>

<p><strong>Forecast.io</strong><br>
Fabian has added support for <a href="https://forecast.io/">Forecast.io</a> to get weather forecasts for Home Assistant. You need an API key which is free but requires a <a href="https://developer.forecast.io/register">registration</a>. To add Forecast.io to your installation, add the following to your <code>configuration.yaml</code> file:</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: forecast
  api_key: YOUR_APP_KEY
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for June 10, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/06/10/release-notes/"/>
    <updated>2015-06-10T18:54:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/06/10/release-notes</id>
    <content type="html"><![CDATA[<p>Wow, almost a month has gone by since the last release and this release is <em>packed</em>. The biggest part of this release is probably one that you won&rsquo;t notice: the frontend has been upgraded from Polymer 0.5 to the brand new released Polymer 1.0. Polymer has been declared stable by the Google overlords which will allow us to expand functionality that was waiting for this moment to arrive.</p>

<p>This release sets a record for the amount of people involved: 8! <a href="https://github.com/Andythigpen">Andythigpen</a>, <a href="https://github.com/Jamespcole">Jamespcole</a>, <a href="https://github.com/Azelphur">Azelphur</a>, <a href="https://github.com/Fabaff">Fabaff</a>, <a href="https://github.com/Dutchy-">Dutchy-</a>, <a href="https://github.com/Fbradyirl">Fbradyirl</a>, <a href="https://github.com/wind-rider">wind-rider</a> and <a href="https://github.com/ettisan">ettisan</a>, thanks a lot for your contributions!</p>

<p>A big improvement has been brought this release by wind-rider. He took the time to revive the Chromecast support and started improving the media player integration. This triggered other people to join in resulting in a revamped media player experience and support for the Music Player Daemon.</p>

<p class='img'>
  <img src='https://home-assistant.io/images/screenshots/media_player-card.png' />
  Example of the new media player cards
</p>




<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>




<!--more-->


<p>Before jumping into the newly supported platforms, here are the other improvements that are landing this release:</p>

<ul>
<li>Fronted upgraded to Polymer 1.0 by @balloob</li>
<li>Include other YAML files using the <code>!include</code> keyword by @andythigpen</li>
<li>Switch support and bug fixes for Vera platform by @jamespcole</li>
<li>HTTP session support for the HTTP component by @jamespcole</li>
<li>Device tracker bugfixes by @Dutchy-</li>
<li>Bugfix for device tracker platform by @fbradyirl</li>
<li>Fixing Chromecast support by @wind-rider</li>
<li>Media player improvements by @balloob and @wind-rider</li>
<li>Nest thermostat bugfixes by @balloob</li>
<li>Fix the device tracker getting in a deadlock by @balloob</li>
<li>Update documentation by @fabaff</li>
</ul>


<p><strong>Music Player Daemon</strong><br>
<img src='https://home-assistant.io/images/supported_brands/mpd.png' style='border:none; box-shadow: none; float: right;' height='50' />
Fabaff has contributed MusicPlayerDaemon support. The mpd platform allows you to control a <a href="http://www.musicpd.org/">Music Player Daemon</a> from Home Assistant. Right now, only playback is supported and not playlist manipulation.</p>

<pre><code class="yaml"># Example configuration.yaml entry
media_player:
  platform: mpd
  server: 127.0.0.1
  port: 6600
  location: bedroom
</code></pre>

<p><strong>Command line switch</strong><br>
A switch platform that issues specific commands when it is turned on and off. This might very well become our most popular platform as it allows anyone to integrate any type of switch into Home Assistant that can be controlled from the command line, including calling other scripts!</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: command_switch
  switches:
    - kitchen_light:
        oncmd: switch_command on kitchen
        offcmd: switch_command off kitchen
</code></pre>

<p><strong>LimitlessLED</strong><br>
This new platform can control your LimitlessLED lights from within Home Assistant. The lights are also known as EasyBulb, AppLight, AppLamp, MiLight, LEDme, dekolight or iLight.</p>

<pre><code class="yaml"># Example configuration.yaml entry
light:
  platform: limitlessled
  host: 192.168.1.10
  group_1_name: Living Room
  group_2_name: Bedroom
  group_3_name: Office
  group_4_name: Kitchen
</code></pre>

<p><strong>Bitcoin sensor</strong><br>
<img src='https://home-assistant.io/images/supported_brands/bitcoin.png' style='border:none; box-shadow: none; float: right;' height='50' />
The bitcoin platform displays various details about the <a href="https://bitcoin.org">Bitcoin</a> network. If you have an online wallet from <a href="https://blockchain.info/">Blockchain.info</a> the sensor is capable to show your current balance.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: bitcoin
  wallet: 'YOUR WALLET_ID'
  password: YOUR_ACCOUNT_PASSWORD
  currency: YOUR CURRENCY
  display_options:
    - exchangerate
    - trade_volume_btc
    - miners_revenue_usd
    - btc_mined
    - trade_volume_usd
    - difficulty
    - minutes_between_blocks
    - number_of_transactions
    - hash_rate
    - timestamp
    - mined_blocks
    - blocks_size
    - total_fees_btc
    - total_btc_sent
    - estimated_btc_sent
    - total_btc
    - total_blocks
    - next_retarget
    - estimated_transaction_volume_usd
    - miners_revenue_btc
    - market_price_usd
</code></pre>

<p><strong>SMTP notificatoin platform</strong><br>
<img src='https://home-assistant.io/images/supported_brands/smtp.png' style='border:none; box-shadow: none; float: right;' height='50' />
The smtp platform allows you to deliver notifications from Home Assistant to an e-mail recipient.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
  platform: mail
  server: MAIL_SERVER
  port: YOUR_SMTP_PORT
  sender: SENDER_EMAIL_ADDRESS
  starttls: 1 or 0
  username: YOUR_SMTP_USERNAME
  password: YOUR_SMTP_PASSWORD
  recipient: YOUR_RECIPIENT
</code></pre>

<p><strong>Syslog notification platform</strong><br>
The syslog platform allows you to deliver notifications from Home Assistant to the local syslog.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
  platform: syslog
</code></pre>

<p><strong>Swiss Public transport sensor</strong><br>
The swiss public transport sensor will give you the next two departure times from a given location to another one in Switzerland. See the <a href="/components/sensor.swiss_public_transport.html">component page</a> for more information how to set it up.</p>

<p><strong>Transmission turtle mode switch</strong><br>
<img src='https://home-assistant.io/images/supported_brands/transmission.png' style='border:none; box-shadow: none; float: right;' height='50' />
The transmission platform allows you to control your <a href="http://www.transmissionbt.com/">Transmission</a> client from within Home Assistant. The platform enables you switch to your &lsquo;Alternative Speed Limits&rsquo; (aka &lsquo;Turtle mode&rsquo;) setting.</p>

<pre><code class="yaml"># Example configuration.yaml entry
switch:
  platform: transmission
  name: Transmission
  host: 192.168.1.26
  port: 9091
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
</code></pre>

<p><strong>Hikvision camera motion detection support</strong><br>
This switch platform allows you to control your motion detection setting on your Hikvision camera.</p>

<pre><code># Example configuration.yaml entry
switch:
    platform: hikvisioncam
    name: Hikvision Cam 1 Motion Detection
    host: 192.168.1.26
    username: YOUR_USERNAME
    password: YOUR_PASSWORD
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for May 14, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/05/14/release-notes/"/>
    <updated>2015-05-14T22:25:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/05/14/release-notes</id>
    <content type="html"><![CDATA[<p>Almost three busy weeks have past since the last release. We used this time to finally make the overhaul to use UTC as the internal date time format. We added a bunch of test coverage in the process to make sure the transition went smoothly. Pleas see <a href="/blog/2015/05/09/utc-time-zone-awareness/#backwards-incompatible-stuff">the blog post about the UTC refactor</a> for backwards incompatible changes.</p>

<p>This release includes a significant startup boost for the frontend and a fix for Wemo discovery after their latest firmware upgrade.</p>

<p>I would like to give a big shout out to our newest contributor <a href="https://github.com/fabaff">fabaff</a> for taking the time to improve the documentation.</p>

<p class='note'>
To update to the latest version, run <code>scripts/update</code>. Please report any issues on <a href='https://github.com/balloob/home-assistant/issues'>GitHub</a>.
</p>




<!--more-->


<p><strong>Overwriting Entity Attributes</strong><br>
Before diving into the newly supported devices and services, I want to highlight an awesome configuration enhancement by <a href="https://github.com/rmkraus">rmkraus</a>: overwriting entity attributes.</p>

<p>These new configuration settings allow you to overwrite entity state attributes. The main usage for this is being able to overwrite attributes that influence how an entity is shown in the interface.</p>

<pre><code class="yaml"># Example configuration.yaml entry
homeassistant:
  customize:
    light.bowl:
      # hides this entity from the interface
      hidden: true
    light.ceiling:
      # Replaces the state badge with given picture
      entity_picture: http://graph.facebook.com/schoutsen/picture
</code></pre>

<p><strong>MySensors</strong><br>
<img src='https://home-assistant.io/images/supported_brands/mysensors.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/andythigpen">Andythigpen</a> and <a href="https://github.com/theolind">Theolind</a> have added support for the <a href="http://www.mysensors.org">MySensors platform</a> to Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: mysensors
  port: /dev/ttyACM0
</code></pre>

<p><strong>OpenWeatherMap</strong><br>
<img src='https://home-assistant.io/images/supported_brands/openweathermap.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="http://openweathermap.org">OpenWeatherMap</a>. This will allow you to integrate local meteorological data into Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: openweathermap
  api_key: YOUR_API_KEY
  monitored_variables:
    - type: 'weather'
    - type: 'temperature'
    - type: 'wind_speed'
    - type: 'humidity'
    - type: 'pressure'
    - type: 'clouds'
    - type: 'rain'
    - type: 'snow'
</code></pre>

<p><strong>InstaPush</strong><br>
<img src='https://home-assistant.io/images/supported_brands/instapush.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="https://instapush.im">InstaPush</a>. This will allow you send messages from Home Assistant to your iOS and Android devices.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: instapush
    # Get those by creating a new application, event, and tracker on https://instapush.im
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
    app_secret: ABCDEFGHJKLMNOPQRSTUVXYZ
    event: ABCDEFGHJKLMNOPQRSTUVXYZ
    tracker: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>

<p><strong>XMPP</strong><br>
<img src='https://home-assistant.io/images/supported_brands/xmpp.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for Jabber/XMPP. This will allow you send messages from Home Assistant to anyone on Jabber/XMPP.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: xmpp
    sender: YOUR_JID
    password: YOUR_JABBER_ACCOUNT_PASSWORD
    recipient: YOUR_RECIPIENT
</code></pre>

<p><strong>Notify My Android</strong><br>
<img src='https://home-assistant.io/images/supported_brands/nma.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/fabaff">Fabaff</a> has contributed support for <a href="http://www.notifymyandroid.com/">Notify My Android</a>. This will allow you to send messages from Home Assistant to your Android device.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: nma
    # Get this by registering a new application on http://www.notifymyandroid.com/
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>

<p><strong>Time &amp; Date sensor</strong><br>
<a href="https://github.com/fabaff">Fabaff</a> has contributed a time &amp; date sensor. This will allow you to show the current time/date on the dashboard.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: time_date
  monitored_variables:
    - type: 'time'
    - type: 'date'
    - type: 'date_time'
    - type: 'time_date'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for April 25, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/04/25/release-notes/"/>
    <updated>2015-04-25T06:57:00-07:00</updated>
    <id>https://home-assistant.io/blog/2015/04/25/release-notes</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a month since the latest update and a lot has happened again. Here a quick overview of the new things.</p>

<p><strong>Line Charts</strong><br>
<a href="https://github.com/jamespcole">James</a> has upgraded the history in the frontend to support line graphs. Line graphs will be shown for any entity that has a unit of measurement. The line graphs will also be shown in the more info card of an entity. <a href="/demo/">See the demo for a live example.</a></p>

<p class='img'>
<img src='https://home-assistant.io/images/screenshots/history-line-graphs.png'>
</p>


<p><strong>ISY994 hub support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/universal_devices.png' style='border:none; box-shadow: none; float: right;' height='50' />
<a href="https://github.com/rmkraus">Ryan</a> has contributed support to integrate the ISY994 hub by Universal Devices. This allows you to integrate your X10/Insteon sensors, switches and lights.</p>

<p>He has created an extensive getting started guide which can be found on <a href="/components/isy994.html">the ISY994 component page</a>.</p>

<pre><code class="yaml"># Example configuration.yaml entry
isy994:
</code></pre>

<p><strong>Logbook</strong><br>
<img src='https://home-assistant.io/images/screenshots/logbook.png' style='margin-left:10px; float: right;' height="100" />
I (Paulus) have added a logbook component. The logbook component provides a different perspective on the history of your house by showing all the changes that happened to your house in chronological order. <a href="/demo/">See the demo for a live example.</a>
<span class='clearfix'></span></p>

<pre><code class="yaml"># Example configuration.yaml entry
logbook:
</code></pre>

<!--more-->


<p><strong>Transmission support</strong><br>
<img src='https://home-assistant.io/images/supported_brands/transmission.png' style='border:none; box-shadow: none; float: right;' height='50' />
James has also contributed support for integrating Transmission into Home Assistant.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  platform: transmission
  name: Transmission
  host: 192.168.1.26
  port: 9091
  username: YOUR_USERNAME
  password: YOUR_PASSWORD
  monitored_variables:
    - type: 'current_status'
    - type: 'download_speed'
    - type: 'upload_speed'
</code></pre>

<p><strong>Modbus support</strong><br>
<a href="https://github.com/kixam">Kixam</a> has contributed support for modbus, a serial communication protocol to control PLCs. It currently supports sensors and switches which can be controlled over serial, TCP and UDP connections.</p>

<pre><code class="yaml"># Example configuration.yaml entry
modbus:
  type: serial
  method: rtu
  port: /dev/ttyUSB0
  baudrate: 9600
  stopbits: 1
  bytesize: 8
  parity: N

sensor:
  platform: modbus
  slave: 1
  registers:
    16:
      name: My integer sensor
        unit: C
    24:
      bits:
        0:
          name: My boolean sensor
        2:
          name: My other boolean sensor

switch:
  platform: modbus
  slave: 1
  registers:
    24:
      bits:
        0:
          name: My switch
        2:
          name: My other switch
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release notes for March 22, 2015]]></title>
    <link href="https://home-assistant.io/blog/2015/03/22/release-notes/"/>
    <updated>2015-03-22T00:21:00-08:00</updated>
    <id>https://home-assistant.io/blog/2015/03/22/release-notes</id>
    <content type="html"><![CDATA[<p>A new version of Home Assistant has just been pushed out. It contains bugfixes contributed by <a href="https://github.com/jamespcole">jamespcole</a>, <a href="https://github.com/andythigpen">andythigpen</a>, <a href="https://github.com/trainman419">trainman419</a> and <a href="https://github.com/balloob">me</a>. It also adds a bunch of great new features:</p>

<p><strong>Script</strong><br>
Andythigpen has contributed a script component. This allows users to create a sequence of service calls and delays. Scripts can be started using the service <code>script/turn_on</code> and interrupted using the service <code>script/turn_off</code>. A separate page has been added to the frontend to see the status of your scripts.</p>

<pre><code class="yaml"># Example configuration.yaml entry
script:
  # Turns on the bedroom lights and then the living room lights 1 minute later
  wakeup:
    alias: Wake Up
    sequence:
      - alias: Bedroom lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.bedroom
      - delay:
          # supports seconds, milliseconds, minutes, hours, etc.
          minutes: 1
      - alias: Living room lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.living_room
</code></pre>

<!--more-->


<p><strong>Scene</strong><br>
I (Paulus) have contributed a scene component. A user can create scenes that capture the states you want certain entities to be. For example a scene can contain that light A should be turned on and light B should be bright red. Deactivating a scene will restore the previous state from before the scene was activated. Just like scripts, scenes have their own separate page to see which scenes are on.</p>

<pre><code class="yaml"># Example configuration.yaml entry
scene:
  - name: Romantic
    entities:
      light.tv_back_light: on
      light.ceiling:
        state: on
        color: [0.33, 0.66]
        brightness: 200
</code></pre>

<p><a name='sabnzbd'></a>
<strong>SABnzbd</strong><br>
<img src='https://home-assistant.io/images/supported_brands/sabnzbd.png' style='border:none; box-shadow: none; float: right;' height='50' />
James Cole has contributed support to integrate SABnzbd. This will allow you to monitor your downloads from within Home Assistant and setup automation based on the information.</p>

<pre><code class="yaml"># Example configuration.yaml entry
sensor:
  - platform: sabnzbd
    name: SAB
    api_key: YOUR_API_KEY
    # Example: http://192.168.1.32:8124/
    base_url: YOUR_SABNZBD_BASE_URL
    monitored_variables:
        - type: 'current_status'
        - type: 'speed'
        - type: 'queue_size'
        - type: 'queue_remaining'
        - type: 'disk_size'
        - type: 'disk_free'
</code></pre>

<p><a name='pushover'></a>
<strong>PushOver</strong><br>
<img src='https://home-assistant.io/images/supported_brands/pushover.png' style='border:none; box-shadow: none; float: right;' height='50' />
James Cole has also contributed support for <a href='https://pushover.net/'>the PushOver service</a> as a platform for the notify component. This allows components to send messages to the user using PushOver.</p>

<pre><code class="yaml"># Example configuration.yaml entry
notify:
    platform: pushover
    # Get this by registering a new application on https://pushover.net
    api_key: ABCDEFGHJKLMNOPQRSTUVXYZ
    # Get this by logging into your account on https://pushover.net
    user_key: ABCDEFGHJKLMNOPQRSTUVXYZ
</code></pre>
]]></content>
  </entry>
  
</feed>
